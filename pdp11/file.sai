ifcr not declaration(WANTREAD) thenc

IFC NOT DECLARATION(BAYSAISW!) THENC
    ENTRY WANTREAD,WANTWRITE,IN!CHR!COUNT;
    BEGIN "FILE"
    REQUIRE "BAYSAI.SAI[A710SA00]" SOURCE!FILE;
    LET FILE!TERNAL=INTERNAL;
    REDEFINE FILE!BODIES=TRUE;
ELSEC
    LET FILE!TERNAL=EXTERNAL;
    REDEFINE FILE!BODIES=FALSE;
    ifcr HISEGGING>0 thenc lib!l(FILEH) elsec lib!l(FILE) endc;
ENDC
! THIS FILE IS USED TO SET UP SIMPLE IO FOR FILES;
! IT ASSUMES THAT BAYSAI.SAI HAS BEEN REQUIRED OFF OF [A710SA00];


IFC FILE!BODIES THENC
STRING SIMPLE PROCEDURE GETDEV(REFERENCE STRING STR);
BEGIN "GETDEV"
!  STRIPS THE DEVICE IF ANY OFF THE FRONT OF THE FILE.  IF THERE  IS
NO DEVICE, IT RETURNS "DSK" AS THE DEFAULT DEVICE.  ;

    STRING S;
    integer B;
    SETBREAK(DUM←GETBREAK,":"," "&TAB&0,"IKS");
    S←SCAN(STR,DUM,B);
    if B neq ":" then
	BEGIN STR←S; S←"DSK" END;
    RELBREAK(DUM);
    RETURN(S);
END "GETDEV";
ENDC


FILE!TERNAL own integer array IN!CHR!COUNT[0:'17];
	! the globally-accessible array of values for INPUT counts;


FILE!TERNAL BOOLEAN SIMPLE PROCEDURE WANTREAD(	REFERENCE INTEGER CHANNEL;
				INTEGER MODE;
				REFERENCE INTEGER BRKCHR,EOF;
				REFERENCE STRING FILE);
IFC FILE!BODIES THENC
BEGIN "WANTREAD"
INTEGER DUM; STRING SDUM;
IF NOT(0≤CHANNEL≤'17) THEN CHANNEL←GETCHAN;		! GET A CHANNEL;
IF CHANNEL<0 THEN
	BEGIN						! IF THERE ARE NONE LET USER KNOW;
	USERERR(0,1,CRLF&"WANTREAD: no channels available.");
	RETURN(TRUE)
	END;
if IN!CHR!COUNT[CHANNEL]≤0 then IN!CHR!COUNT[CHANNEL]←300;
	! Default the character count to 300;
WHILE TRUE DO						! UNTIL A FILE GETS LOOKED UP OR USER QUITS;
    BEGIN "INFILE"
    IF LENGTH(FILE)>0 THEN				! TRUE IF FILE NAME PASSED IN;
	BEGIN
	SDUM←GETDEV(FILE);				! OPEN A CHANNEL ON THE RIGHT DEVICE;
	OPEN(CHANNEL,SDUM,MODE,2,0,IN!CHR!COUNT[CHANNEL],BRKCHR,EOF←TRUE);
	IF EOF THEN
	    BEGIN					! WRONG DEVICE;
	    OUTSTR(CRLF&"WANTREAD: device """&SDUM&""" not available.");
	    FILE←NULL; CONTINUE "INFILE";
	    END;
	LOOKUP(CHANNEL,FILE,DUM);			! DO THE DEED;
	IF DUM THEN OUTSTR(CRLF&"WANTREAD: can't LOOKUP """&FILE&""".")
		ELSE RETURN(FALSE);
	END;
    OUTSTR("Input File: ");			! IF LOOKUP FAILED OR NO FILE PASSED IN;
    IF LENGTH(FILE←INCHWL)=0 THEN
	BEGIN						! THE USER GIVES UP;
	RELEASE(CHANNEL);
	RETURN(TRUE)
	END;
    END "INFILE";					! TRY, TRY AGAIN;
END "WANTREAD";
ENDC


FILE!TERNAL BOOLEAN SIMPLE PROCEDURE WANTWRITE(REFERENCE INTEGER CHANNEL;INTEGER MODE;REFERENCE STRING FILE);
IFC FILE!BODIES THENC
BEGIN "WANTWRITE"
BOOLEAN WARN; INTEGER MYDUM; STRING MYSDUM;

IF NOT(0≤CHANNEL≤'17) THEN CHANNEL←GETCHAN;		! GET A CHANNEL;
IF CHANNEL<0 THEN
    BEGIN						! TELL USER IF NONE LEFT;
    USERERR(0,1,CRLF&"WANTWRITE: no channels available.");
    RETURN(TRUE)
    END;
IF FILE="|" THEN 					! IF THE FIRST CHARACTER OF THE FILE NAME IS | THEN;
	BEGIN						! THE USER IS WARNED IF HE WOULD END UP DELETING A;
	ZILCH←LOP(FILE);				! FILE IN ORDER TO WRITE THIS ONE;
	WARN←TRUE
	END
    ELSE WARN←FALSE;

WHILE TRUE DO
	BEGIN "FILENTER"
	WHILE TRUE DO						! UNTIL WE MAKE SURE WE HAVE A GOOD FILE;
	    BEGIN "OUTFILE"
	    IF LENGTH(FILE)>0 THEN
		BEGIN						! DO THIS IF A FILE NAME WAS PASSED IN OR ON SECOND PASS THROUGH;
		MYSDUM←GETDEV(FILE);				! OPEN THE CHANNEL ON THE RIGHT DEVICE;
		OPEN(CHANNEL,MYSDUM,MODE,0,2,0,ZILCH,MYDUM←TRUE);
		IF MYDUM THEN					! WRONG DEVICE;
			BEGIN
			OUTSTR(CRLF&"WANTWRITE: device """&MYSDUM&""" not available.");
			FILE←NULL; CONTINUE "FILENTER";
			END;
		if not WARN then done "OUTFILE";
		if CALL(cvsix(MYSDUM),"DEVTYP") ≥ 0		! LOOKUPs not mandatory;
			or equ(MYSDUM,"NULL"[1 to length(MYSDUM)])
		   then done "OUTFILE";
		LOOKUP(CHANNEL,FILE,DUM);			! CHECK TO SEE IF FILE ALREADY EXISTS;
		if DUM then done "OUTFILE";			! does not exist;
		OUTSTR(CRLF&"File """&FILE&""" already exists.  Delete old file? ");
		IF (DUM←INCHWL)="Y" OR DUM="y"
		   then begin CLOSIN(CHANNEL); done "OUTFILE" end;
		end;
	    OUTSTR("Output File: ");			! GET AN OUTPUT FILE NAME;
	    IF LENGTH(FILE←INCHWL)=0 THEN			! IF THERE IS NONE THEN GIVE UP;
		BEGIN
		RELEASE(CHANNEL);
		RETURN(TRUE)
		END;
	    END "OUTFILE";

	ENTER(CHANNEL,FILE,DUM);				! DO THE DEED;
	IF NOT DUM THEN DONE "FILENTER";
	OUTSTR(CRLF&"WANTWRITE: can't ENTER """&FILE&""".");
	FILE←NULL;
	END "FILENTER";
RETURN(FALSE);
END "WANTWRITE";
ENDC


IFC FILE!BODIES THENC
    END "FILE"
ENDC

ENDC
