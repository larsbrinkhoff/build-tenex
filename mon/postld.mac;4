;<MON>POSTLD.MAC		7/75		EDIT BY HEATHMAN
;ADDED TO LOCAL SYMBOL REMOVAL LIST AND REMOVED REMOVAL CONFIRMATION
;<TENEX-131>POSTLD.MAC;70    17-JAN-73 15:21:18	EDIT BY CLEMENTS
;<TENEX-130>POSTLD.MAC;69     2-JAN-73 16:34:46	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;68    28-DEC-72 14:12:40	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;67    27-DEC-72 15:34:29	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;66    26-DEC-72 14:54:46	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;65    13-DEC-72 16:52:27	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;64    13-DEC-72 14:16:37	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;63    13-DEC-72 12:13:22	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;62    13-DEC-72 11:50:22	EDIT BY TOMLINSON
; ADD SPACE PRINTER, FIX UP .JB... SYMBOLS FOR EDDT USE
;<TENEX-130>POSTLD.MAC;61     4-DEC-72 13:28:29	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;60     4-DEC-72 12:52:37	EDIT BY TOMLINSON
; FIXED AND STREAMLINED SYMBOL TABLE CRUNCHER
;<TENEX-130>POSTLD.MAC;59     2-DEC-72 18:23:35	EDIT BY CLEMENTS
;<TENEX-130>POSTLD.MAC;58     1-DEC-72 17:56:47	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;57     1-DEC-72 15:10:16	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;56    30-NOV-72 17:37:05	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;55    30-NOV-72 11:48:32	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;54    30-NOV-72 10:46:57	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;53    27-NOV-72 18:02:50	EDIT BY CLEMENTS
;<TENEX-130>POSTLD.MAC;52    27-NOV-72 17:24:58	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;51    27-NOV-72 12:58:55	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;50    27-NOV-72 12:07:25	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;49    21-NOV-72  9:17:02	EDIT BY WALLACE
;<TENEX-130>POSTLD.MAC;48    13-NOV-72 15:33:44	EDIT BY TOMLINSON
;<TENEX-130>POSTLD.MAC;47    13-NOV-72 14:19:14	EDIT BY TOMLINSON
; MAKE .JBUSY BE RIGHT
;<TENEXDLM>POSTLD.MAC;46    23-AUG-72 20:28:07	EDIT BY MURPHY
;<TENEXDLM>POSTLD.MAC;45    22-AUG-72 20:49:18	EDIT BY MURPHY
;<TENEXDLM>POSTLD.MAC;44    22-AUG-72 20:27:15	EDIT BY MURPHY
;<TENEXDLM>POSTLD.MAC;43    22-AUG-72 20:24:06	EDIT BY MURPHY

	SEARCH PROLOG
	TITLE POSTLD
	BLOCK 40	;LEAVE SOME SPACE AFTER LAST PROG
RESEND:			;DEFINES END OF CODE, SYMTAB MOVED TO HERE

	SWAPCD
SWPF:			; DEFINE SWAPPABLE PATCH SPACE

DDT=DDTX		; DEFINE THIS HERE SO IT'S AVAILABLE

	LOC 4000	;GET THIS CODE OUT OF THE WAY

;POST-LOADING ONE-SHOT INIT

P=17

EXTERN	.JBHRL,.JBREL,.JBSA,.JBFF,.JBSYM
IFN SUMEX,<EXTERN SYSBT>	;!! MAH @ SUMEX 2/75 !!

	INTERN RESEND,DDT,SWPF

	EXTERN MONCOR,SYSGO1,WMST,SWPSTP,SWPCOR,DDTX,SWCEND,SVN,SVNUM
	EXTERN SMDSKA,P2

SYSG0:	MOVE P,[IOWD 40,PDL]
	MOVE 1,[XWD 400000,SWPMA0]
	HRRZ 2,.JBHRL		;BLT SWPMON FROM WHERE LOADER ALWAYS
	BLT 1,-1(2)		;PUTS IT TO RUNTIME LOCATION
IFN KAFLG,<
	MOVEI 4,577		;FLUSH PAGES 400-577
	SETO 1,
	MOVE 2,[XWD 400000,400]
	PMAP
	CAILE 4,0(2)
	AOJA 2,.-2
>;END KAFLG
	MOVSI 1,100001		; OLD FILE & STRING SHORT FORM
	HRROI 2,[ASCIZ /MAP.MAP/]
	GTJFN			; GET JFN FOR LOADER MAP
	 JRST NOMAP		; NONE
	PUSH P,1		; SAVE IT
	MOVE 1,SVNUM
	HRLI 1,400001		; FOR OUTPUT & STRING SHORT FORM
	HRROI 2,[SYSNAM(<ASCIZ \LOADER-MAP.>,<\>)]
	GTJFN			; GET JFN FOR LOADER-MAP.SYSTEM
	 JRST [	POP P,1
		RLJFN
		 JFCL
		JRST NOMAP]
	MOVE 2,1
	POP P,1
	RNAMF			; RENAME MAP
	 JFCL

	MOVE 1,2
	RLJFN
NOMAP:	 JRST [	HRROI 1,[ASCIZ /
LOADER MAP NOT RENAMED.
/]
		PSOUT
		JRST .+1]
	HRRZ 1,SVNUM		; GET VERSION NUMBER OF THIS SYSTEM
	AOS 1			; PLUS 1 FOR NEXT LOADUP
	HRLI 1,400001
IFE IMSSS,<
	HRROI 2,[ASCIZ /VERSIO.MAC/]
>
IFN IMSSS,<
	HRROI 2,[ASCIZ /VERSIO.IMS/]
>
	GTJFN
SYSG00:	 JRST [	HRROI 1,[ASCIZ /
CAN'T CREATE NEW VERSION FILE
/]
		PSOUT
		JRST SYSG01]
	PUSH P,1
	MOVE 2,[7B5+1B20]
	OPENF
	 JRST [	POP P,1
		RLJFN
		 JFCL
		JRST SYSG00]
	HRROI 2,[ASCIZ /SVNM==^D/]
	SETZ 3,
	SOUT
	HRRZ 2,SVNUM
	AOS 2
	MOVEI 3,^D10
	NOUT
	 MOVE 1,0(P)
	HRROI 2,[ASCIZ /
/]
	SETZ 3,
	SOUT
	POP P,1
	CLOSF
	 JFCL

SYSG01:	PUSHJ P,SMDSKA		;SETUP DSK RELOAD ADDRESSES
	HRRZ 2,.JBHRL
	SUBI 2,1
	LSH 2,-^D9
	MOVEM 2,SWCEND
	MOVEI 1,101
	MOVEI 3,^D8
	NOUT
	JFCL
	HRROI 1,[ASCIZ / IS LAST PAGE OF SWAPPABLE CODE.
/]
	PSOUT

; PRINT SPACE REMAINING BETWEEN BOUNDARIES

	HRROI 1,[ASCIZ /
SPACE REMAINING BETWEEN BOUNDARIES:

RES VARS & RES MON =	/]
	PSOUT
	MOVEI 2,P2##
	SUBI 2,RESVLC##
	CALL OCTOT
	HRROI 1,[ASCIZ / -- INCREASE RESMA0 DEFINITION IN PARAMS./]
	SKIPGE 2
	 PSOUT
	HRROI 1,[ASCIZ /
DUAL PROC. VARIABLES =    /]
	PSOUT
	MOVEI 2,KIEPT+1000
	SUBI 2,KILOCS##
	CALL OCTOT
	HRROI 1,[ASCIZ / -- REDUCE PAGE TABLE VARIABLES./]
	SKIPG 2
	PSOUT
	HRROI 1,[ASCIZ /
SWP VARS & SWP MON =	/]
	PSOUT
	MOVEI 2,SWPMA0
	SUBI 2,NRESLC##
	CALL OCTOT
	HRROI 1,[ASCIZ / -- REDUCE TABLE SIZES OR INCREASE SWPMP0/]
	SKIPGE 2
	PSOUT
	HRROI 1,[ASCIZ /
SWP PAG VARS & MDDT =	/]
	PSOUT
	MOVEI 2,MDDT
	SUBI 2,NRPLOC##
	CALL OCTOT
	HRROI 1,[ASCIZ / -- REDUCE SWP PAG VAR SIZES OR INCREASE MDDT/]
	SKIPGE 2
	PSOUT
	HRROI 1,[ASCIZ /
JSB STRGE & JFN STRG =	/]
	PSOUT
	MOVEI 2,JFNPC0
	SUBI 2,JSBLOC##
	CALL OCTOT
	HRROI 1,[ASCIZ / -- INCREASE JFNPC0 BY MULTIPLE OF 20(8)/]
	SKIPGE 2
	PSOUT
	HRROI 1,[ASCIZ /
AC BLOCKS & PSB STRGE =	/]
	PSOUT
	MOVEI 2,UACB
	SUBI 2,TSBLOC##
	CALL OCTOT
	HRROI 1,[ASCIZ / -- DELETE ONE AC BLOCK AND MOVE THEM UP/]
	SKIPGE 2
	PSOUT
	HRROI 1,[ASCIZ /
/]
	PSOUT
	JRST FIXSYM		; GO MOVE AND FIX UP SYMTAB

OCTOT:	MOVEI 1,101
	MOVEI 3,8
	NOUT
	 JFCL
	RET

FIXSYM:	HLRE 1,.JBUSY##		; GET LENGTH OF UNDEF SYM TAB
	MOVE 2,.JBSYM##		; USE LOCATION OF SYMBOL TAB
	SKIPE 1			; IF NO UNDEF SYMTAB
	MOVE 2,.JBUSY		; ELSE USE UNDEF SYMTAB
	MOVEI 3,RESEND
	HRRM 3,.JBUSY		; NEW UNDEF SYMTAB
	SUB 3,1			; ASSUMES UNDEF SYMTAB IMMEDIATELY BELOW
	HRRM 3,.JBSYM		; DEF SYMTAB, THIS YIELDS NEW DEF SYMTAB
	HLRE 1,.JBSYM		; LENGTH OF DEF SYMTAB
	SUB 3,1			; NEW END OF WORLD
	HRLI 2,RESEND
	MOVSS 2
	BLT 2,-1(3)		; MOVE SYMTABS
	HRRZM 3,.JBFF##
	HRLM 3,.JBSA##
	MOVE 1,.JBSYM
	MOVEM 1,36
	MOVE 1,.JBUSY
	MOVEM 1,32
	HRRZ 1,.JBHRL		; GET HIGH SEG BREAK
	IORI 1,1777		; MOVE TO 1K BOUND
	MOVEM 1,.JBREL		; SET .JBREL
	SETZM .JBHRL
	MOVEI 2,DDTX		;START OF EDDT
	ADDI 2,777
	LSH 2,-^D9
	MOVEM 2,MONCOR		;END OF MONITOR CORE
	MOVE 2,[JRST DDTX]	;SETUP EDDT DISPATCH
	MOVEM 2,100
	HRRM 2,.JBSA
	MOVEI 1,400000
	SEVEC

;SORT THE BUG TABLE BY BUG ADDRESS

	MOVSI 7,-NBUGP
BUGSR4:	MOVSI 5,-NBUGP(7)	;SCAN FROM HERE TO END
	HRRI 5,0(7)
	MOVSI 3,1		;INITIAL MIN
BUGSR1:	HLRZ 1,STRBGP(5)	;BUG ADDRESS
	JUMPE 1,BUGSR2		;IGNORE ZEROS
	CAML 1,3		;MIN SO FAR?
	JRST BUGSR2		;NO
	MOVEI 3,0(1)		;YES, REMEMBER VALUE
	MOVEI 4,0(5)		;AND LOCATION
BUGSR2:	AOBJN 5,BUGSR1
	TLNE 3,-1		;FOUND A MIN?
	JRST BUGSR3		;NO, NOTHING BUT ZEROS LEFT
	MOVE 1,STRBGP(4)	;INTERCHANGE MIN WITH TOP OF TABLE
	EXCH 1,STRBGP(7)
	MOVEM 1,STRBGP(4)
	AOBJN 7,BUGSR4

;DUMP BUG TABLE AND STRINGS TO FILES

BUGSR3:	MOVEI 7,0(7)
	MOVNM 7,NBUGTP		;SAVE NEG OF NUMBER OF PTRS
	HRRZ 1,SVNUM		; USE SYSTEM VERSION NUMBER
	HRLI 1,(1B0+1B17)	; FOR OUTPUT AND STRING SHORT FORM
	HRROI 2,[SYSNAM(<ASCIZ \BUGSTRINGS.>,<\>)]
	GTJFN
	0
	MOVE 2,[7B5+1B20]
	OPENF
	0
	SETZ 3,
	HRROI 2,SVN		;SYSTEM VERSION TEXT
	SOUT
	HRROI 2,[ASCIZ /
BUGHLT AND BUGCHK LOCATIONS AND DESCRIPTIONS

/]
	SOUT
	MOVEI 5,STRBGP		;MOVE AND COMPACT STRINGS TO
	SUB 5,NBUGTP		;AREA IMMEDIATELY AFTER POINTERS
	MOVEI 4,1(5)		;CLEAR THE AREA FIRST
	HRLI 4,0(5)
	SETZM 0(5)
	BLT 4,STRBGP+SBUGTF-1
	HRLZ 7,NBUGTP
BUGD1:	MOVE 6,STRBGP(7)	;TABLE ENTRY?
	HLRZ 2,6		;ADDRESS
	MOVE 3,[1B2+6B17+10B35]	;OCTAL PRINT, USE EXACTLY 6 COLUMNS
	NOUT
	0
	MOVEI 2," "
	BOUT
	HRROI 2,0(6)
	SETZ 3,
	SOUT			;PRINT THE STRING
	HRROI 2,[ASCIZ /
/]
	SOUT

	HRRM 5,STRBGP(7)	;SET NEW ADDRESS OF STRING
BUGD3:	MOVE 2,0(6)		;MOVE STRING TO COMPACTING AREA
	MOVEM 2,0(5)
	ADDI 5,1
	TRNE 2,177B34		;UNTIL (LAST) CHAR OF 0 ENCOUNTERED
	AOJA 6,BUGD3
BUGD2:	AOBJN 7,BUGD1
	CLOSF
	0
	MOVE 1,SVNUM
	HRLI 1,(1B0+1B17)
	HRROI 2,[SYSNAM(<ASCIZ \BUGTABLE.>,<\>)]
	GTJFN
	0
	MOVE 2,[44B5+1B20]
	OPENF
	0
	MOVE 2,NBUGTP		;COUNT GOES OUT FIRST
	BOUT
	HRLZ 7,NBUGTP
	MOVE 2,STRBGP(7)
	SUBI 2,STRBGP		;MAKE STRING POINTERS RELATIVE
	BOUT
	AOBJN 7,.-3
	MOVM 7,NBUGTP
	HRLI 7,-SBUGTF(7)
	MOVE 2,STRBGP(7)
	BOUT			;OUTPUT STRINGS
	AOBJN 7,.-2
	CLOSF
	0

;REMOVE REDUNDANT SYMBOLS FROM TABLE

	SKIPL 7,.JBSYM		; GET SYMTAB POINTER, SKIP THE AOBJP
SS2:	AOBJP 7,SS8		; JUMP IF DONE
	MOVE 1,0(7)		;GET SYMBOL
	TLCE 1,14B23		;PROGRAM NAME, OR
	TLCN 1,14B23		;BLOCK NAME?
	AOBJN 7,SS2		;YES, KEEP SYMBOL (ALWAYS JUMP)
	TLNE 1,60B23		;DELETE NO-INPUT,NO-OUTPUT SYMBOLS
	JRST SS6
	MOVE 2,1(7)		;GET VALUE
	CAIGE 2,1000		;VALUE 20-777?
	CAIGE 2,20
	SKIPA
	JRST SS22		; FLUSH SYMBOLS 20-777
SS23:	MOVE 3,1
	TLZ 1,14B23		;FLUSH LOCAL-GLOBAL BITS
	MOVE 6,7		; START INNER SCAN FROM HERE
	AOBJP 6,SS1		; PLUS 1
SS1:	AOBJP 6,SS61		; GET NEXT, JUMP IF INNER LOOP DONE
	CAMN 2,1(6)		;VALUE THE SAME?
	SKIPN 4,0(6)		;SYMBOL NOT PREVIOUSLY DELETED?
	AOBJN 6,SS1		;NO (ALWAYS JUMP)
	TLCE 4,14B23		;PROGRAM NAME, OR
	TLCN 4,14B23		;BLOCK NAME?
	AOBJN 6,SS1		;YES (ALWAYS JUMP)
	XOR 4,3
	TDNE 4,[XWD 037777,-1]	;SYMBOL EQUAL (EXCLUDING BITS)?
	AOBJN 6,SS1		;NO (ALWAYS JUMP)
	SETZM 0(6)		;YES, DELETE SYMBOL
	TLON 1,04B23		;AND MAKE ORIGINAL GLOBAL
	MOVEM 1,0(7)
	AOBJN 6,SS1		; ALWAYS JUMP

SS22:	TLO 1,40B23		; VALUE 0 - 777, MAKE IT NO OUTPUT
	MOVEM 1,0(7)
	JRST SS23

SS6:	SETZM 0(7)		;DELETE NO-INPUT SYMBOL
SS61:	AOBJN 7,SS2		; ALWAYS JUMP

SS8:	MOVE 7,.JBSYM		;SCAN TABLE AND COMPACT
	MOVEI 6,0(7)		;WILL BE NEW TABLE POINTER
SS5:	SKIPN 1,0(7)		;DELETED?
	JRST SS4		;YES
	MOVEM 1,0(6)
	MOVE 1,1(7)
	MOVEM 1,1(6)
	ADD 6,[XWD -2,2]	;MOVE TO NEW POSITION
SS4:	AOBJN 7,.+1
	AOBJN 7,SS5
	HLLM 6,.JBSYM		;STORE NEW COUNT
	HRLM 6,.JBSA		;STORE NEW END
	HRRM 6,.JBFF
	MOVEI 2,0(6)		;PRINT NEW END
	MOVEI 1,101
	MOVEI 3,^D8
	NOUT
	JFCL
	MOVE 1,.JBSYM
	MOVEM 1,SWPSTP		;PUT POINTER WHERE WMST WILL SEE IT
	JSP 4,WMST		;WRITE SYMBOL TABLE ONTO FILE
	SETZM SWPSTP

	HRROI 1,[ASCIZ /

REMOVE SYMBOLS FOR:
/]
	PSOUT
	MOVSI 16,-NPNMS		;NUMBER OF PRG NAMES TO SCAN
CKS1:	HRRZ 10,.JBSYM
	HLRE 11,.JBSYM
	SUB 10,11		;CURRENT END OF TABLE
	SUBI 10,MAXSYM		;EXCESS WORDS OF TABLE
	MOVEI 1,0(16)		;TABLE INDEX
	CAIG 10,0		;CRUNCH IF OVERLAP EXISTS, OR
	SKIPL PNAMES+1(16)	;IF ALL SYMBOLS BEING REMOVED
	JSP 17,CSS		;REMOVE LOCAL SYMBOLS IN THIS PRG
	AOBJN 16,.+1		;2 WORDS PER ENTRY
	AOBJN 16,CKS1		;CHECK NEXT PROGRAM
	JUMPLE 10,CSS7		;QUIT IF NOW NO EXCESS
	HRROI 1,[ASCIZ /
SYMBOL TABLE STILL OVERFLOWS.
/]
	PSOUT
CSS7:	MOVE 3,.JBSYM		;MOVE POINTER TO EXEC DDT LOCATION
	MOVEM 3,36
	HRRZ 3,.JBFF		;END OF SYMTAB
	ADDI 3,777		;ADJUST TO NEXT PAGE BOUNDARY
	LSH 3,-^D9		;NUMBER OF FIRST PAGE AFTER SYMTAB
	MOVEM 3,SWPCOR
	HRROI 1,[ASCIZ /
SWPCOR= /]
	PSOUT
	MOVEI 1,101
	MOVE 2,3
	MOVEI 3,^D8
	NOUT
	0
	MOVEI 1,37
	PBOUT
	SETO 1,
	MOVE 4,SWPCOR
	SUBI 4,SWPMP0
	HRLZS 4
	HRR 4,SWPCOR
	MOVSI 2,400000
	SETZ 3,
	HRR 2,4
	PMAP
	AOBJN 4,.-2
IFE SUMEX,<MOVEI 4,P2>
IFN SUMEX,<MOVEI 4,SYSBT>	;!! MAH @ SUMEX 2/75 !!
	LSH 4,-^D9		;FIRST PAGE OF RES MON
	MOVNI 4,-2(4)
	HRLZS 4
	HRRI 4,2
	MOVE 16,[CLRPRG,,5]
	BLT 16,16
	JRST 5

CLRPRG:	PHASE 5
	HRR 2,4
	PMAP
	AOBJN 4,.-2
	HALTF
	JRST .-1
DEPHASE

;PROGRAM AND BLOCK NAMES TO FLUSH LOCAL SYMS

	DEFINE PN (A)
<	RADIX50 0,A
	XWD -1,[ASCIZ /A/]
>

	DEFINE PNX (A)
<	RADIX50 0,A
	XWD 0,[ASCIZ /A/]
>

PNAMES: PN <POSTLD>
	PNX <EDDT>		;FLUSH ALL SYMS OF EDDT
	PNX <JOBDAT>		; AND JOBDAT
	PN <SYSBT>
	PN <SYSSAV>
	PN <DATIME>
	PN <FLOUT>
	PN <RITH>
	PN <FLIN>
	PN <CRASH>
	PN <SSYS>
	PN <ISYS>
	PN <PLOTTE>
	PN <LINEPR>
	PN <STRING>
	PN <PTR>
	PN <PTP>
 	PN <NIL>
	PN <NETWRK>
	PN <HOSTS>
	PN <MAGTAP>
	PN <FILTTY>
	PN <FILINI>
	PN <DISC>
	PN <DECTAP>
	PN <LOOKUP>
	PN <JSYS>
	PN <IO>
	PN <GTJFN>
	PN <FUTILI>
	PN <FREE>
	PN <DIRECT>
	PN <DEVICE>
	PN <DRM>
	PN <DSK>
	PN <IMPDV>
	PN <TTYSRV>
	PN <SUMX>
	PN <I4>
	PN <SWPMON>
	PNX <TENDMP>

NPNMS==.-PNAMES

;REMOVE LOCAL SYMBOLS FROM BLOCK OR PROGRAM
;INDEX TO PNAMES TABLE GIVEN IN 1
;CALLED WITH JSP 17,CSS

CSS:	MOVEI 4,0(1)
	MOVE 5,PNAMES(1)	;GET RADIX50 OF NAME
	HRRO 1,PNAMES+1(1)	;GET ASCIZ OF NAME
	PSOUT			;SO WE KNOW WHAT WAS CRUNCHED
	SKIPL PNAMES+1(4)	;ALWAYS REMOVE?
	JRST CSSGO		;YES
IFE SUMEX,<			;!! MAH @ SUMEX !! 7/75
	MOVEI 1,100
	SIBE			;INPUT WAITING?
>
	JRST CSSGO		;YES, DON'T ASK, PRESUME YES
CSSQ1:	HRROI 1,[ASCIZ /? /]
	PSOUT
	PBIN
	CAIN 1,"Y"		;YES, REMOVE
	JRST CSSGO
	CAIN 1,"N"
	JRST CSSRET		;NO, DON'T REMOVE
	JRST CSSQ1		;TRY AGAIN

CSSGO:	MOVE 7,.JBSYM		;SCAN WHOLE TABLE
	MOVE 6,7		;REMEMBER START OF CURRENT PRG
CSS1:	MOVE 1,0(7)
	TLCE 1,(14B5)		;PRG OR
	TLCN 1,(14B5)		;BLOCK NAME?
	JRST CSS2		;YES
CSS3:	AOBJN 7,.+1
	AOBJN 7,CSS1		;KEEP SCANNING TABLE
	HRROI 1,[ASCIZ / - NOT FOUND
/]
	PSOUT
	JRST 0(17)

CSS2:	TLZ 1,(74B5)		;CLEAR TYPE BITS
	CAMN 1,5		;DESIRED NAME?
	JRST CSS4		;YES
	MOVE 6,7		;NO, REMEMBER LOC OF END OF BLOCK
	ADD 6,[XWD 2,2]
	JRST CSS3

;FOUND DESIRED BLOCK, NOW REMOVE LOCAL SYMBOLS

CSS4:	MOVE 5,6
CSS6:	CAMN 5,7		;SCANNED WHOLE BLOCK?
	JRST CSS8		;YES
	MOVE 1,0(5)		;GET NEXT SYMBOL
	SKIPGE PNAMES+1(16)	;FLUSHING ALL SYMS THIS PGM, OR
	TLNE 1,(10B5)		;LOCAL?
	SOJA 10,[SOJG 10,CSS5	;ELIMINATED EXCESS SYMBOLS YET?
		SKIPL PNAMES+1(16) ;YES, REMOVING ALL OF PGR BLOCK?
		JRST CSS5	;YES, KEEP REMOVING
		ADD 5,[XWD 2,2]	;YES
		JRST CSS8]	;FINISH UP
	MOVEM 1,0(6)		;NOT LOCAL, MOVE IT
	MOVE 1,1(5)
	MOVEM 1,1(6)		;MOVE VALUE
	ADD 6,[XWD 2,2]		;UPDATE 'TO' POINTER
CSS5:	ADD 5,[XWD 2,2]		;UPDATE 'FROM' POINTER
	JRST CSS6

CSS8:	MOVSI 1,0(5)		;MOVE REST OF TABLE WITH BLT
	HRRI 1,0(6)
	HLRE 2,5		;COMPUTE NEW END OF TABLE
	MOVEI 3,0(6)		;AS AMOUNT LEFT TO MOVE PLUS
	SUB 3,2			;CURRENT 'TO' LOCATION
	BLT 1,-1(3)		;MOVE REST OF TABLE
	MOVEM 3,.JBFF		;UPDATE LOWER CORE
	HRLM 3,.JBSA
	HRRZ 2,.JBSYM		;CALC NEW LENGTH AS
	SUB 2,3			;BEG-END
	HRLM 2,.JBSYM
CSSRET:	MOVEI 1,37
	PBOUT
	JRST 0(17)

	LIT

NBUGTP:	0		;NUMBER OF BUG TABLE POINTERS
PDL:	BLOCK 40

	END SYSG0
