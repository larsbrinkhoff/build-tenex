;<DLM/TEMP>FILINI.MAC;10    31-OCT-72 10:54:47	EDIT BY CHIPMAN
; FIX PAGE STORAGE END CHECK AND INIT JOBUNT
;<DLM/TEMP>FILINI.MAC;9    21-AUG-72 20:08:25	EDIT BY MURPHY
;<FILESYSTEM>FILINI.MAC;8    29-JUN-72  9:54:41	EDIT BY TOMLINSON

	SEARCH	FILEDEF,STENEX
	TITLE	FILINI

EXTERN	CHKDEV,CLASS,DEVDSP,DSKDTB,GETFDB,INIBLK,MAPDIR,TODCLK,USTDIR
EXTERN	MAXLW,RELPAG,ASGPAG,ACCTPT,DIDSCA,DIDSCI
EXTERN	DSKBTI,JOBDIR
INTERN	FILINI,JBFINI

; Initialize file stuff

	USE	RESPC

JBFINI::MOVEI A,JSFREE		; Origin of free area in jsb
	HRLOM A,JSBFRE		; To header
	MOVEI A,IJSFRE
	HRRZM A,JSFREE		; One big block free
	MOVEM A,JSBFRE+2
	SETOM JSBFRE+1
	MOVE A,[XWD JSFREE+IJSFRE,JSFREE]
	MOVEM A,JSBFRE+4
	MOVEI A,MAXLW+1
	MOVEM A,JSBFRE+3
	MOVE A,[XWD JBCOR,JBCOR+1]
	UNLOCK(JBCLCK)
	SETZM JBCOR
	BLT A,JBCOR+3
	MOVEI C,FREJP		; Start with frejp page
IJFRLP:	MOVE A,C
	LSH A,9
	PUSH P,C
	PUSHJ P,RELPAG
	POP P,C
	CAIGE C,PPMPG-1
	AOJA C,IJFRLP
	SETOM PRIMRY		; Primary io to controlling tty
	SETOM JFNLCK		; Unlock jfnlck
	SETZM MAXJFN
	MOVEI A,1
	MOVEM A,JOBDNO
	MOVE B,JOBNO
	HRLZM A,JOBDIR(B)	; Connect to directory 1, no log in
	SETOM JOBUNT		; DEFAULT DSK UNIT
IFDEF NDP,<	SETZM JOBDC##>	; No display consoles assigned
	MOVE A,[XWD 777000,-1]
	MOVEM A,CAPMSK
	MOVEM A,CAPENB
	MOVE A,[XWD 500000,^D220100]
	MOVEM A,ACCTPT
	POPJ P,

; File system initialization

FILINI:	SKIPE DIDSCA
	JRST FILINW
	SKIPN DISKP
	 JRST FILINW
	HRROI A,[ASCIZ /
DO YOU REALLY WANT TO CLOBBER THE DISC BY RE-INITIALIZING? /]
FILINQ:	PSOUT
	PBIN
	PUSH P,A
	MOVEI A,37
	PBOUT
	POP P,A
	CAIN A,"Y"
	JRST [	HRROI A,[ASCIZ /OK, YOU ASKED FOR IT./]
		PSOUT
		JRST FILINW]
	CAIE A,"N"
	JRST [	HRROI A,[ASCIZ /PLEASE TYPE Y OR N: /]
		JRST FILINQ]
	HRROI A,[ASCIZ /I THOUGHT NOT.
PLEASE BE MORE CAREFUL IN THE FUTURE./]
	PSOUT
	MOVE A,DIDSCI
	MOVEM A,DIDSCA

FILINW:	SKIPN DIDSCA		; Dont init bit table if not fresh start
	PUSHJ P,DSKBTI
	PUSHJ P,DEVINI##
IFDEF MTAN,<	PUSHJ P,MTAINI##>
IFDEF LPTN,<	PUSHJ P,LPTINI##>
IFDEF PLTN,<	PUSHJ P,PLTINI##>
IFDEF PTPN,<	PUSHJ P,PTPINI##>
IFDEF PTRN,<	PUSHJ P,PTRINI##>
IFDEF DTAN,<	PUSHJ P,DTAINI##>
IFDEF NETN,<	PUSHJ P,NETINI##>
IFDEF NDP,<	PUSHJ P,DSPINI##>
	PUSHJ P,DMPINI##
	MOVE A,TODCLK
	ANDI A,777
	MOVEM A,CLASS
	SKIPE 1,DIDSCA		; Do we have a disc address for di
	JRST FILIN1		; Yes, use it
	PUSHJ P,NEWIB		; No, get an ib ofn
	MOVEM B,DIDSCA
	MOVEM A,DIOFN
	PUSHJ P,NEWIB
	PUSH P,B
	PUSH P,A
	HRLOI A,600000
	PUSHJ P,CHKDEV
	BUG(HLT,<FILINI: CHKDEV FAILED TO FIND DEVICE DSK:.>)
	POP P,A
	MOVEM A,FDLOFN
	PUSHJ P,ASGPAG
	BUG(HLT,<FILINI: ASGPAG FAILURE.>)
	MOVE B,A
	HRLI B,140000
	MOVE A,FDLOFN
	PUSHJ P,SETMPG
	HRLI B,C
	MOVSI C,-NFDIB

FILIN9:	PUSH P,B
	PUSH P,C
	PUSHJ P,NEWFD
	TLO B,40
	TLZ B,20
	EXCH B,-1(P)
	POP P,C
	MOVEM A,FDOFN(C)
	POP P,@B
	AOBJN C,FILIN9
	MOVEI A,0
	PUSHJ P,SETMPG
	HRRZ A,B
	PUSHJ P,RELPAG
	MOVEI A,0
	PUSHJ P,MAPDIR
	POP P,FDADR		; Store disc address of fd in di
	PUSH P,FDADR
	SETOM DIRLCK		; Unlock the block 0
	MOVEI A,ESBIDT-DIRORG	; End of sbidtb is beginning of hash
	MOVEM A,DIRHTO
	SETZM ESBIDT
	MOVE A,[XWD ESBIDT,ESBIDT+1]
	BLT A,ESBIDT+177
	MOVEI A,475
	MOVEM A,DIRHTL		; Hash table length
	SETZM DIRFRE		; No free area in block 0
	SETZM DIRFRE+1
	SETZM DIRFRE+2
	SETZM SYMBOT		; No symbol table either
	SETZM SYMTOP
	SETZB C,DIRNUM
	MOVE B,[POINT 7,SBIDTB]
	MOVEI A,1
FILINZ:	IDPB A,B
	CAIN C,"L"
	 AOS A
	CAIE C,177
	AOJA C,FILINZ
	MOVNI A,1
	PUSHJ P,FILINX
	MOVNI A,2
	PUSHJ P,FILINX
	JRST INLP1

FILINX:	PUSH P,A
	PUSHJ P,MAPDIR
	POP P,C
	MOVEI A,DDBLEN
	MOVEI B,7777
	PUSHJ P,INIBLK
	SETOM DIRLCK
	POPJ P,

; Initialize directory and index contents

INLP1:	MOVEI A,[ASCIZ /PDP-10/]
	HRROM A,MKFDBK+1
	HRROI 1,[ASCIZ /SYSTEM/]
	MOVE 2,[XWD 260000,MKFDBK]
	CRDIR
	JFCL
	MOVSI 1,200001
	HRROI 2,[ASCIZ /<SYSTEM>DIRECTORY;1;P774040/]
	GTJFN
	BUG(HLT,<FILINI: GTJFN FAILURE FOR <SYSTEM>DIRECTORY.>)
	MOVE JFN,A
	LSH JFN,SJFN
	HRROI DEV,DSKDTB
	PUSHJ P,GETFDB
	BUG(HLT,<FILINI: GETFDB FAILURE FOR <SYSTEM>DIRECTORY.>)
	POP P,FDBADR(A)		; Put fd disc address into fdb
	MOVSI B,FDBNXF
	ANDCAM B,FDBCTL(A)
	MOVSI B,FDBLNG
	IORM B,FDBCTL(A)
	PUSHJ P,USTDIR
	MOVSI 1,200001
	HRROI 2,[ASCIZ /<SYSTEM>INDEX;1;P770000/]
	GTJFN
	BUG(HLT,<FILINI: GTJFN FAILURE FOR <SYSTEM>INDEX.>)
	MOVE JFN,A
	LSH JFN,SJFN
	HRROI DEV,DSKDTB
	PUSHJ P,GETFDB
	BUG(HLT,<FILINI: GETFDB FAILURE FOR <SYSTEM>INDEX.>)
	MOVE B,DIDSCA
	MOVEM B,FDBADR(A)
	MOVSI B,FDBNXF
	ANDCAM B,FDBCTL(A)
	PUSHJ P,USTDIR
	MOVNI 1,1
	RLJFN
	JFCL
	POPJ P,

MKFDBK:	0
	0
	0
	700000
	0

; Make directory and index known to system

FILIN1:	TLO A,(1B2)
	PUSHJ P,ASOFN		; Get ofn for di
	BUG(HLT,<FILINI: ASOFN FAILURE FOR DIRECTORY INDEX.>)
	MOVEM 1,DIOFN
	MOVEI A,0
	PUSHJ P,MAPDIR
	MOVE 1,FDADR
	TLO A,(1B2)
	PUSHJ P,ASOFN		; Get ofn for fd
	BUG(HLT,<FILINI: ASOFN FAILURE FOR FD.>)
	MOVEM A,FDLOFN
	HRLOI A,600000
	PUSHJ P,CHKDEV
	BUG(HLT,<FILINI: CHKDEV FAILED TO FIND DEVICE DSK:.>)
	MOVE A,FDLOFN
	HRLM A,DEVDSP(B)
	PUSHJ P,ASGPAG
	BUG(HLT,<FILINI: ASGPAG FAILURE FOR PAGE TO INIT FD'S.>)
	MOVE B,A
	HRLI B,140000
	MOVE A,FDLOFN
	PUSHJ P,SETMPG
	HRLI B,F
	MOVSI F,-NFDIB
FILIN2:	MOVE A,@B
	TLO A,20
	PUSH P,B
	TLZE A,40
	PUSHJ P,ASOFN
	BUG(HLT,<FILINI: ASOFN FAILURE FOR FD.>)
	POP P,B
	MOVEM A,FDOFN(F)
	AOBJN F,FILIN2
	MOVEI A,0
	PUSHJ P,SETMPG
	HRRZ A,B
	PUSHJ P,RELPAG
	POPJ P,

NEWFD:	TDZA A,A
NEWIB:	MOVSI A,(1B2 )
	TLO A,(1B3)
	PUSH P,A
	MOVE A,DIDSCI		; Parameter dependent on configuration
	PUSHJ P,DSKASN		; Get a blank disc address
	BUG(HLT,<NEWIB: DSKASN FAILURE FOR INITIAL SYSTEM PAGE TABLES.>)
	TLO A,20
	IORM A,(P)
	EXCH A,(P)
	PUSHJ P,ASOFN
	BUG(HLT,<NEWIB: ASOFN FAILURE FOR INITIAL SYSTEM BLOCKS.>)
	PUSH P,A		; Save the ofn
	PUSHJ P,ASGPAG		; Get a page in job area
	BUG(HLT,<NEWIB: ASGPAG FAILURE FOR INITIALIZING SYTEM PT'S.>)
	PUSH P,A
	MOVE B,A
	TLO B,140000
	MOVE A,-1(P)
	PUSHJ P,SETMPG
	MOVE A,(P)
	HRLZ B,A
	HRRI B,1(A)
	SETZM (A)
	BLT B,777(A)
	MOVE B,(P)
	MOVEI A,0
	PUSHJ P,SETMPG
	POP P,A
	PUSHJ P,RELPAG
	POP P,A
	POP P,B			; Get disc address
	POPJ P,

	END

