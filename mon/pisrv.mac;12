;<MON>PISRV.MAC;12     2-JUN-77 16:28:55    EDIT BY SWEER
; rearranged piapr to call drum etc only on 1 ms ints
;<MON>PISRV.MAC;9    25-APR-77 16:30:39    EDIT BY SWEER
; ADDED CALL TO SPY - PC SAMPLER
; <MON>PISRV.MAC 3/18/77 EDIT BY SWEER
; ADDED SAVING FPC B4 ANY XCT MJRSTF
;<MON>PISRV.MAC;8    14-JAN-77 14:42:26    EDIT BY SWEER
;ADDED PICON A LA APRCON
;<SCHULZ>PISRV.MAC;7    24-NOV-76 13:42:44    EDIT BY SWEER
; ADDED APRCON AND CONI APR,APRCON IN PIAPR FOR DEBUGGING
;<SCHULZ>PISRV.MAC;6    24-NOV-76 13:02:35    EDIT BY SWEER
; INCREASED P5NP FROM 20 TO 22 SINCE DECTAP CAUSED PDL OV
;<MON>PISRV.MAC;15    30-JAN-75 02:32:15    EDIT BY LIEB
;INSERTED BUGNTE--BUGNOTE, SIMILAR TO BUGCHK EXEPT NO ACTION TAKEN--LIEB
;<KI-ASSEMBLY>PISRV.MAC;86    24-JUL-73  0:49:17	EDIT BY SCHULZ
;BUGS IN PRIOR EDIT
;<KI-ASSEMBLY>PISRV.MAC;84    18-JUL-73 23:18:35	EDIT BY DURHAM
;	6/29/73--ADD I4-TENEX CHANGES
;<TENEX-131>PISRV.MAC;69     9-JAN-73 14:31:07	EDIT BY CLEMENTS
;<TENEX-130>PISRV.MAC;68     2-DEC-72 18:26:31	EDIT BY CLEMENTS
;<TENEX-130>PISRV.MAC;67    20-NOV-72 14:57:23	EDIT BY TOMLINSON
; REMOVED BGHERE
;<TENEX-130>PISRV.MAC;66    20-NOV-72 13:31:49	EDIT BY WALLACE
;<TENEX-130>PISRV.MAC;65    10-NOV-72  0:19:12	EDIT BY TOMLINSON
; CHANGED BGHERE USAGE
;<TENEXDLM>PISRV.MAC;64     7-AUG-72 21:48:57	EDIT BY MURPHY
;26 JUN 72, 1729:

;PI DISPATCH MODULE - D. MURPHY
;SYSTEM INITIALIZATION

;CELLS NOT CHANGED DURING DISK RELOAD OF RES MON

	EXTERN DSKSRQ
	EXTERN JOBQNT,ISKDMS
	EXTERN I4INI
	EXTERN BUGHLT,BUGCHK,BUGNTE
	EXTERN RCADDT,SAVE36,SAVE32
	EXTERN RLRMON,DIDSCI,DIDSCA
IFN SUMEX,<EXTERN CRSHSV,DUMPSW,SYSBT>
	INTERN DCHKSW,BUGADR,CHKADR
	INTERN DCHKSW,CRSTD1,MEMCHK
	INTERN SYSGO1,MSTKOV,SYSGO,SYSLOD,DBUGSW,GETSMF,CRSTAD,SYSRST

IFN SUMEX,<
	IFDEF DRMCHN,<EXTERN CLKDRS>>
IFDEF TYMSW,<EXTERN YHCRSH,TYMCLK,TYMCS2>
;	DISK USES 24,25
CRSTD1=27		;CRASH TIME AND DATE SAVED WHILE RELOADING
BUGHAD=26		;BUGHLT AND CHK ADDRESSES SAVED WHILE RELOADING
DBUGS1=30		;DBUGSW SAVED WHILE RELOADING
DMPSW1=31		;DUMPSW SAVED WHILE RELOADING

;*** DO NOT SEPARATE - A GETAB TABLE ***
DCHKSW=77	;NE 0 MEANS BREAK ON BUGCHKS
DBUGSW=76	;0=UNATTENDED, 1=ATTENDED, 2=DEBUGGING
;*** END OF "DBUGSW" GETAB TABLE ***
GETSMF=75	;MONITOR SAVED ON DSK IF NON-0
;SKIP OVER 74 WHICH IS JOBDDT IN DEC STUFF, MAKING ANNOYING CONFLICTS
CRSTAD=73	;TIME AND DATE SAVED ON LAST AUTO-RESTART

;MANUAL START TRANSFER VECTOR

	LOC 100
	0			;EDDT - SET BY POSTLD
	JRST SYSRST		;RESTART
	JSR BUGHLT		;PLACE TO GO TO CRASH SYSTEM
	JRST REGSAV		;SAVE REGISTERS ON CRASH
	0
IFN SUMEX,<
	JRST SYSBT		;105/ DEFAULT START OPTIONS
>
IFE SUMEX,<0>
	JRST SYSGO		;106/ RELOAD AND START
	JRST SYSGO1		;107/ START
	;;;; 110-111	USED FOR DISK COMMAND POINTERS
	RELOC

;DEFINE APPROPRIATE SYMBOLS FOR EXISTENT DEVICES

IFDEF DSKCHN,<	INTERN DSKCHN,DSKCHR
	EXTERN DSKINI,DSKRST,DSKSV,DSKLUN>
IFDEF DRMCHN,<	INTERN DRMCHN,DRMCHR
	EXTERN DRMINI,DRMRST,DRMSV>
IFDEF MTACHN,<	INTERN MTACHN,MTACHR
	EXTERN MTARST>
IFE IMSSS,<
IFDEF MTACHN,< INTERN MTDCHN
		EXTERN MTASV>
>
IFDEF LPTCHN,<	INTERN LPTCHN,LPTCHR
	EXTERN LPTSV,LPTRST>
IFDEF DSPCHN,<	INTERN DSPCHN,DSPCHR
	EXTERN DSPSV,NRUNG,DSPCNT,DSPRSK,DSPRST>
IFDEF DTACHN,<	INTERN DTACHN,DTDCHN,DTACHR
	EXTERN DTASV,DTARST>
IFDEF PTRCHN,<	INTERN PTRCHN,PTRCHR
	EXTERN PTRSV,PTRRST>
IFDEF PTPCHN,<	INTERN PTPCHN,PTPCHR
	EXTERN PTPSV,PTPRST>
IFDEF PLTCHN,<	INTERN PLTCHN,PLTCHR
	EXTERN PLTSV,PLTRST>
IFDEF DLSCHN,<	INTERN DLSCHN,DLSCHR
	EXTERN TTINIT,TTRSET,DLSSV,TTNIT1>
IFDEF IMPCHN,<	INTERN IMPCHN,IMPCHR
	EXTERN IMPSV,IMPRST>
IFDEF DACCHN,<
	INTERN DACCHR,DACCHN
	EXTERN DACSV,DACRST>
IFDEF PCMCHN,<
	INTERN PCMCHN,PCDCHN,PCMCHR
	EXTERN PCMSV,PCMTHR,PCMRST>

;RELOAD SYSTEM FROM DISK AND RESTART

SYSGO:	CONO 250,DSKCHN
	SKCPU0			;SEE IF CPU0
	JRST SYSCP1		;ISN'T-GO INIT CPU1
	SETZM CP0INF		;INDICATE INIT ISN'T DONE
	SETZM CP1INF		;CLEAR CP1'S FLAG TOO
	PIOFF 610000		;RESET PI
	CONO APR,200000		;RESET IO
	MOVE 1,BUGHLT		;SAVE POSSIBLY INTERESTING CELLS
	HRL 1,BUGCHK
	MOVEM 1,BUGHAD
	MOVE 1,DBUGSW
	HRL 1,DCHKSW
	MOVEM 1,DBUGS1
;
;	SUMEX-CHANGE
;
IFN SUMEX,<
	MOVE 1,DUMPSW
	MOVEM 1,DMPSW1  >
	SKIPLE DISKP		;IF NO DISK
	SKIPG GETSMF		;OR NO SAVED MONITOR
	JRST .+2		;DON'T TRY TO RELOAD
	JSP 7,RLRMON		;RELOAD MON FROM DISK, THEN START
	MOVE 1,CRSTD1
	MOVEM 1,CRSTAD
	MOVE 1,DBUGS1
	HRRM 1,DBUGSW
	HLRM 1,DCHKSW
;
IFN SUMEX,<
	MOVE 1,DMPSW1
	MOVEM 1,DUMPSW	>	;RESTORE CRASH/RECOVERY DUMP SWITCH

;START FROM SCRATCH AFTER DECTAPE LOADING

SYSGO1:	SKIPA 7,DIDSCI
SYSLOD:	SETZ 7,			;CLEAR DIDSCA TO RELOAD DISK
	CONO 250,DSKCHN		;SET FOR DUAL PROCESSOR
	SKCPU0			;SEE IF CPU0
	JRST SYSCP1		;ISN'T INIT CPU1
	SETZM CP0INF		;INIT IN PROGRESS
	SETZM CP1INF		;SAME FOR CP1
	MOVE P,PI7P0
	CONO APR,200000		;RESET IO DEVICES
	CONO PI,610000		;RESET PI
	CONO 250,DSKCHN		;SET FOR PROCESSOR AGAIN
	SETZM CRSTD1
;
IFN SUMEX,<MOVE 2,DUMPSW>
	MOVE 1,[XWD 5000,5000+1]
	SETZM -1(1)
	BLT 1,RESMA0-1

	CALL PAGRST		;SET UP PAGE TABLE
	CALL CPUINI		;MORE CPU INITIALIZATION STUFF
;
IFN SUMEX,<MOVEM 2,DUMPSW>
	MOVEM 7,DIDSCA
	SKIPE 1,CRSTAD		;HAVE SAVED PRE-CRASH INFO?
	MOVE 1,BUGHAD		;YES, RESTORE CELLS
	HRRZM 1,BUGHLT
	HLRZM 1,BUGCHK
	MOVE 1,SWPCOR
	MOVEM 1,RCADDT		;SAVE VALUE OF SWPCOR
	MOVE 1,36
	MOVEM 1,SAVE36
	MOVE 1,32
	MOVEM 1,SAVE32
;
;	CALL I4-TENEX INITIALIZATION
	CALL I4INI
;
	CALL PGRINI		;INIT DST, CST, ETC.
	IFDEF DRMCHN,<CALL DRMINI>		;DRUM
	IFDEF DSKCHN,<CALL DSKINI>		;DISK
	IFDEF DLSCHN,<CALL TTINIT>		;TELETYPE MODULE
	IFN DK10F,<CALL DK10IN>	;DK10 CLOCK
	CALL SCDIN		;SCHEDULER
	CALL PIINIT		;PI MODULE - LAST INIT
	MOVE 1,[XWD CTYLIN,JOBSRT]
	CALL SCDRQ7		;INITIATE FIRST JOB
	SETOM CP0INF		;INDICATE INIT COMPLETE
	JRST SCHED0		;TO SCHEDULER


SYSCP1:
	SKIPN CP0INF
	JRST .-1
	MOVE 1,[SKIPE SYSIFG]
	MOVE 2,[JRST SYSCPB]
	MOVE 3,[ JFCL 0]
	MOVE 4,[AOJA 0,1 ]
	JRST 1
SYSCPB:	MOVE P,PI7P1		;CPU1'S STACK FOR SCHEDULER
	CALL CP1INI		;INIT CP1
SYSCPA:	AOSE GENLCK
	JRST .-1
	SKIPL STOPLK		;MAKE SURE NOBODY STOPPED
	JRST	[ SETOM GENLCK	;WAIT
		JFCL
		JRST SYSCPA]
	SETOM CP1INF
	SETOM GENLCK
	JRST SCHED0		;ENTER SCHEDULER


CP1INI:				;CP1 INITIALIZATION
	CONO APR,200000		;RESET I/O DEVICES
	CONO PI,610000		;RESET PI
	CALL PAGRST		;RESET PAGER
	CALL CPUINI		;OTHER CPU STUFF
	CALL PIINIT
	CALL DK10IN
	RET

;SAVE REGISTERS ON CRASH

KS CPREG,20
CP0REG==KIEPT0+CPREG-KIEPT
CP1REG==KIEPT1+CPREG-KIEPT

REGSAV:	CONO APR,200000
	CONO PI,610000
	PGROFF
	CONO 250,DSKCHN
	SKCPU0
	JRST [ MOVEM 17,CP1REG+17
		MOVEI 17,CP1REG
		JRST REGSV1]
	MOVEM 17,CP0REG+17
	MOVEI 17,CP0REG
REGSV1:	BLT 17,16(17)
	JRST 4,.


;RESTART SYSTEM

	DEFINE DEVRST (A)
<	IFDEF A'CHN,<CALL A'RST>>

SYSRST:	
	CONO APR,200000
	CONO PI,410000
	CONO 250,DSKCHN
	SKCPU0			;SKIP IF CPU0
	JRST [	SKIPN CP0INF
		JRST .-1
		MOVE P,PI7P1
		PUSH P,KIEPT1+INSKED-KIEPT
		PUSH P,KIEPT1+FORKX-KIEPT
		CALL CP1INI	;INIT CPU1
		JRST SYSRS1]
	MOVE P,PI7P0
	PUSH P,KIEPT0+INSKED-KIEPT
	PUSH P,KIEPT0+FORKX-KIEPT
	SETZM CP0INF		;CLEAR INIT COMPLETION FLAGS
	SETZM CP1INF
	SETZM PWRDWN
	SETOM SCDRN1
	CALL PAGRST
	CALL CPUINI
	CALL PGRRST
	IFDEF DLSCHN,<CALL TTRSET>
	DEVRST DRM
	DEVRST DSK
	DEVRST MTA
	DEVRST LPT
	DEVRST DSP
	DEVRST DTA
	DEVRST PTR
	DEVRST PTP
	DEVRST PLT
	DEVRST IMP
   IFN DK10F,<CALL DK10IN>	;DK10 CLOCK
	MOVEI 1,1
	MOVEM 1,INSKED
	SETZM SKEDF1
	SETZM SYNCC
	CALL PIINIT
	CALL SWPRST		;SWAPPER CLEANUP
SYSRS1:
	MOVE 1,CPUID
	SETOM CP0INF(1)		;INDICATE INITIALIZED
	POP P,FORKX		;RESTORE FORKX
	POP P,1
	JUMPN 1,SCHED0		;RESUME SCHED IF THERE AT CRASH
	SETZM INSKED
	SETOM TRAPC
	MOVSI 1,UMODF		;CRASH PROCESS RUNNING AT CRASH
	MOVEM 1,FPC
	JRST ITRAP

   IFN KAFLG,<
PAGRST:	RET>			;NOP FOR BBN PAGER

   IFN DK10F,<
DK10IN:	CONO CLK,1B26		;CLEAR CLOCK
	CONSZ CLK,1B26		;ON INTERNAL (10USEC) SOURCE?
	RET			;NO,DON'T USE
	DATAO CLK,[^D100]	;FOR 1 MS INTERVALS
	CONO CLK,1B27+1B30+APRCHN ;CLEAR 'USER TIME', TURN CLOCK ON
	RET
>

;IMPOSSIBLE SITUATION HALT

	EXTERN BUGTYO,BUGMSG,EXBUGH,TADDAY

KS BUGHLT,2
LS SYMPRS,1		;MONITOR SYMBOL TABLE PRESENT FLAG
LS DDTPRS,1		;DDT PRESENT FLAG
IFN SUMEX,<LS DUMPSW,1>	;CRASH DUMP FLAG, 0=> NO DUMP ON BUGHLT

BUGH9:
	AOSE DDTLCK		;PROTECT CRASH CODE
	JRST .-1
	SOS BUGHLT
	SKIPE DBUGSW		;DEBUG MODE?
BUGH0:	SKIPE DDTPRS		;YES, DDT IN CORE ?
	CAIA			;NO
BUGADR:
	JRST [HULOCK DDTLCK	;RELEASE LOCK
		JRST 4,@BUGHLT]
	AOS JB0FLG		;GET IT REPORTED SOON
	SKIPN INSKED		;IN SCHEDULER?
	CONSZ PI,177B27		;OR IN PI?
	JRST .+2
	JRST [HULOCK DDTLCK	;NO, CRASH THIS JOB
		JRST EXBUGH]
	PIOFF			;TURN OFF SYSTEM
	MOVEI 1,[SIXBIT '$BUGHLT AT /']
	JSR BUGMSG		;TYPE CRASH MESSAGE
	HRLZ 2,BUGHLT
	MOVEI 3,6		;TYPE 6 DIGITS
BUGH1:	SETZ 1,
	LSHC 1,3
	ADDI 1,"0"
	JSR BUGTYO
	SOJG 3,BUGH1
	MOVEI 1,[SIXBIT '$/']
	JSR BUGMSG
	SKIPGE TADSEC		;TIME AND DATE NOW SET?
	JRST BUGH2		;NO
	MOVE 1,TODCLK		;YES, REMEMBER IT FOR RESTART
	IDIVI 1,^D1000
	ADDI 1,^D10		;ADD 10 SECS FOR WHEN CLOCK IS OFF
	ADD 1,TADSEC		;CONVERT TODCLK AND OFFSET TO
	IDIVI 1,^D24*^D3600	;INTERNAL FORM TIME AND DATE
	ADD 1,TADDAY		;SEE GTAD
	HRLI 2,0(1)
	MOVEM 2,CRSTD1		;CRASH TIME AND DATE
BUGH2:
	JRST .			;MUST RESTART MANUALLY
IFN SUMEX,<SKIPE DUMPSW		;IF SWITCH NON ZERO,
	 JSR CRSHSV	 >	;SAVE CRASH IMAGE OF ALL OF CORE
	JRST SYSGO

;LESS SERIOUS HALT

KS BUGCHK,2

BUGC9:
	AOSE DDTLCK		;PROTECT THIS CODE
	JRST .-1
	SKIPE DCHKSW		;DEBUG MODE?
	SKIPE DDTPRS		;YES, DDT IN CORE ?
BUGC0:	CAIA			;NO
CHKADR:	JFCL			;YES, BREAKPOINT HERE
IFDEF TYMSW,<
	EXCH 1,BUGCHK		;if TYMNET, get reson for crash
	MOVEM 1,YHCRSH		;tell base
	EXCH 1,BUGCHK		;restore register
>
	AOS JB0FLG		;GET IT REPORTED
	HULOCK DDTLCK		;RELEASE LOCK
	JRST @BUGCHK		;CONTINUE



;LEAST SERIOUS ERROR, A BUGNOTE---DON'T HALT, JUST REPORT IT

KS BUGNTE,2

BUGN9:	AOS JB0FLG
	JRST @BUGNTE

;PI SYSTEM INITIALIZATION

   IFN KAFLG,<
PIINIT:	MOVSI 1,<JSYS>B53	;SETUP JSYS DISPATCHES IN LOWER CORE
	MOVSI 3,-NPISET
PII1:	HRR 1,PISETT(3)		;DISPATCH ADDRESS WITH JSYS
	HLRZ 2,PISETT(3)	;LOC OF WHERE IT GOES
	MOVEM 1,0(2)
	AOBJN 3,PII1
	CONO APR,473550+APRCHN	;SET APR FLAGS
	CONO PI,642200+177	;CLEAR FLAGS, SET CHANNELS ON
	RET
>

;IMAGE OF LOW CORE PI LOCS

	DEFINE PILC (C,A)
<	XWD 40+2*C,A>

PISETT:	PILC APRCHN,PIAPR	;APR CHANNEL
	PILC 4,PISC4		;GENERAL CHANNELS
	PILC 5,PISC5
	PILC 6,PISC6
	PILC 7,PISC7
   IFN KAFLG,<
	XWD 41,UUOH		;UUO'S AND ILLEGAL INSTRS
	XWD 61,UU60		;UNIMPLEMENTED INSTR'S
	XWD 70,PGRTRP		;PAGER TRAP
   >
NPISET==.-PISETT

KS PIAPRX,2
KS PI1AC1,1

KS PISC5R,2
KS PI5AC,6
P4NP==20
P5NP==22
P6NP==20
KS P4PDL,P4NP
KS P5PDL,P5NP
KS P6PDL,P6NP
KS PIASAV,1		;SAVE WHERE APR CAME FROM FOR DEBUGGING
KS APRCON,1		;SAVE LAST CONI ALSO
KS PICON,1			;ALSO LAST CONI PI
;CHANNEL DISPATCH ROUTINES

PIAPR:	XWD PIAPRX,.+1
	CONI	APR,APRCON		;SAVE FOR DEBUGGING
	CONI	PI,PICON

	MOVEM 1,PIASAV
	SKIP 21			;DISPLAY 21 IN LIGHTS

	SKIPL STOPLK		;SEE IF WE HAVE TO STOP
	SKIPE INSKED		;CAN'T IF INSKED
	JRST PIAPR3
	MOVE 1,STOPLK+1
	CAMN 1,FORKX
	JRST [ MOVE 1,PIASAV
		JRST PIAPR3]	;THIS PROCESS
	MOVE 1,PIASAV
	AOS SKEDF3		;TRIGGER SCHED
	ISB SCDCHN

PIAPR3:	SKIPE CPUID
	JRST PIAPRZ		;DO CP1 APR STUFF

	SOMSCK			;1MS. CLOCK?
	JRST PIAPR1		;NO
	MSCKCL			;YES, CLEAR THE FLAG
	AOS TODCLK		;COUNT DAYTIME
	SOSG SYNCC		;TIME TO SYNC?
	MSCKOF			;YES, TURN OFF CLOCK

	SKIPE DSKSRQ		;SOFTWARE DISK REQUEST
	CONSZ PI,2000		;SKIP IF DSKCHN NOT ACTIVE
	JRST PIADSK
	SKIPGE DSKLUN
	ISB DSKCHN		;TRIGGER TO PROCESS DISK REQUEST

PIADSK:	MOVE 1,KIECPU		;SEE IF CPU1 HAS REQUESTED TTY OUTPUT
	SKIPL TTNIT1-KIEPT(1)
	ISB DLSCHN		;TRIGGER TTY HANDLER

ifn sumex,<
	jsp 1,clkdrs		;check on drum start
>

	MOVE 1,PIAPRX		;SAVE PIAPRX FOR DEBUGGING
	EXCH 1,PIASAV

IFN SUMEX,<
	SKIPE	SPYING##	;DON'T CALL IF NOT NEXECCARY
	JSR	SPY##		;SAMPLE THE PC
>

	JEN @PIAPRX

PIAPR1:	CONSO APR,1B26	;60 CY CLOCK?
	JRST PIAPR2		;NO.
	CONO APR,1B26+APCHNS	;TURN OFF FLAG
	AOSLE MSCNT1
	JRST   [AOS APCLKC
		SETOM MSCNT1
		ISB SCDCHN
		JRST .+1]

APCLKA:	SOSLE MSCNT		;THIRD TICK?
	JEN @PIAPRX
	MOVEM 1,MSCNT		;THIRD TICK (50 MS.), SYNC 1 MS CLOCK
	SKIPLE 1,SYNCC		;COUNTED 50MS?
	JRST [	ADDM 1,TODCLK	;NO, FINISH UP LAST TICKS
		JRST .+2]	;AND LEAVE IT RUNNING
	MSCKON			;TURN CLOCK BACK ON
	MOVEI 1,^D50
	MOVEM 1,SYNCC		;SET TO SYNC AFTER 50 TICKS

IFDEF TYMSW,<
	MOVEM 2,TYMCS2
	JSP 2,TYMCLK
	MOVE 2,TYMCS2
>
	MOVEI 1,3		;AND 3 TICKS OF 60 HZ CLOCK
	EXCH 1,MSCNT
	JEN @PIAPRX

PIAPRZ:				;APR ROUTINE FOR CPU1
	SOMSCK			;1MS CLOCK?
	JRST PIAPZ1		;NO
	MSCKCL			;YES,CLEAR THE FLAG
	JEN @PIAPRX
PIAPZ1:
	CONSO APR,1B26		;60 CY CLOCK?
	JRST PIAPR2		;NO-CHECK REMAINING FLAGS (NXM,ETC)
	CONO APR,1B26+APCHNS	;TURN OFF FLLAG
	AOSG MSCNT1
	JEN @PIAPRX
	AOS APCLKC		;TIME TO CALL SCHEDULER
	SETOM MSCNT1
	ISB SCDCHN
	JEN @PIAPRX

   IFN KAFLG,<
PIAPR2:	MOVEM 1,PI1AC1
	CONSZ APR,1B21		;ADR BRK?
	JRST ADRBK
	CONSZ APR,1B19		;PDL OVF
	JRST P1POV
	CONSZ PI,1B18		;PWR FAIL?
	JRST ACFAIL		;YES
	SKIPN DEVMPE		;DEVICE DETECTED MPE?
	CONSZ PI,1B19		;PARITY ERROR?
	JRST MEMPAR		;YES
	CONSZ APR,1B23+1B22	;NXM, MEM PROT
	JRST P1NXM
	CONI APR,1		;OV OR FOV
	TRC 1,3B29+3B32
	TRNN 1,3B29		;FOV AND FOV ENABLED
	JRST P1FOV
	TRNN 1,3B32		;OV AND OV ENABLED
	JRST P1OV
	JRST OV0		;NOTHING, DEBREAK


;ADDRESS BREAK, ASSUMED TO BE USED FOR WRITE ONLY

ADRBK:	MOVE 1,@ADRBKA		;GET CHECKED WORD
	CONO APR,1B21+APRCHN	;CLEAR FLAG
	CAME 1,ADRBKW		;CHECK PROTECTED WORD. PUT ANY TEST HERE
	JRST OV0		;CHECK ROUTINE CAN BE PATCHED IN HERE
	JRST OV0

LS ADRBKW,1			;PROPER CONTENTS OF CHECKED WORD
LS ADRBKA,1			;ADDRESS OF CHECKED WORD

;OVERFLOWS

P1FOV:	TRNN 1,3B32		;OV ENABLED TOO?
	SKIPA 1,[1B0+1B3]	;YES, CLEAR OV AND FOV FLAGS
	MOVSI 1,(1B3)		;NO, CLEAR FOV ONLY
	ANDCAM 1,PIAPRX		;CLEAR FLAG CAUSING INTERRUPT
	MOVEI 1,P7FOV
	JRST FOV1

P1OV:	MOVSI 1,(1B0)
	ANDCAM 1,PIAPRX		;CLEAR FLAG
	MOVEI 1,P7OV
FOV1:	SKIPN INSKED		;IGNORE IF: IN SCHED, OR
	CONSZ PI,177B27-1B<APRCHN+20> ;IN PI SERVICE
	JRST OV0
	JFCL 17,.+1		;CLEAR FLAGS
	HLL 1,PIAPRX
	TLNN 1,UMODF		;IF IN USER MODE, OR
	SKIPE OVFLG		;IN MONITOR WITH FLAG SET,
	JRST OV1
	HRL 1,PIAPRX
	TLC 1,PGRTRP+1
	TLNE 1,-1		;CAME FROM FIRST INSTRUCTIONOF PGR TRP?
	JRST OV0		;NO
	HLL 1,TRAPPC		;YES, SO REAL PC IS THERE
	TLNE 1,UMODF		;IS THAT USER?
	JRST OV1		;YES, REQUEST INTERRUPT
	JRST OV0

P1NXM:	CONSZ APR,1B22		;MEM PROT?
	JRST P1PRT		;YES
;;; I4 CHANGE	BUG(CHK,<NXM DETECTED BY PROCESSOR>)
	CONO APR,1B23+APRCHN	;THEN CLEAR FLAGS
	MOVE 1,PIAPRX
	TLNN 1,UMODF		;USER PC?
	BUG(HLT,<FATAL XNM>)
	MOVEI 1,MPEINT		;GIVE USER MPE INTERRUPT
	JRST OV1

P1PRT:	BUG(CHK,<MEM PROT VIOL REPORTED BY PROCESSOR>)
	DATAO APR,[XWD 776776,0] ;RESET IT IN CASE WAS CLEARED RANDOMLY
	CONO APR,1B22+APRCHN	;CLEAR FLAG
	JRST OV0		;AND PROCEED

P1POV:	CONO APR,1B18+APRCHN	;CLEAR FLAG
	MOVE 1,PIAPRX
	TLNN 1,UMODF		;FROM MONITOR?
	JRST P1SOV
P1UPOV:	MOVEI 1,P7POV
	JRST OV1

P1SOV:	MOVEI 1,0(1)
	CAIE 1,PGRTRP+1		;FROM PAGER TRAP STARTING?
	JRST P1MSOV		;NO, REAL MSOV
	MOVE 1,TRAPPC		;MEM TRAP AS WELL AS SOV, GET PC
	TLNE 1,UMODF		;THIS ONE USER?
	JRST P1UPOV		;YES
P1MSOV:	MOVE 1,PI1AC1
	JEN @[MSTKOV]
   >		;END OF KA-10 PROCESSOR CONDITIONS

OV1:	HRL 1,FORKX
	JSR SCDRQ		;REQUEST SCHEDULER ACTION
	RESKED
OV0:	MOVE 1,PI1AC1
	JEN @PIAPRX

MSTKOV:	CONSO PI,177B27		;BAD ONE?
	SKIPE INSKED
	BUG(HLT,<PDL OVERFLOW IN SCHEDULER OR WHILE PI IN PROGRESS>)
	BUG(CHK,<PDL OVERFLOW IN MONITOR>)
	SETOM TRAPC		;NOT SO BAD
	MOVE P,ACBAS1		;RESET TO TOP OF MON STACK
	MOVEM P,ACBAS
	SETACB P
	MOVE P,UPP		;GET A REASONABLE STACK
	ADD P,BHC+2
	MOVEM P,MPP
	SETZM SLOWF
	JRST ITRAP

;AC FAIL

ACFAIL:	CONO PI,1B18		;CLEAR FLAG
	AOS PWRDWN		;SET FLAG TO NOTIFY SCHED
	RESKED			;NOW
	JRST OV0

;MEMORY PARITY ERROR DETECTED

MEMPAR:	PIOFF
	AOSE DDTLCK		;PROTECT THIS CODE
	JRST .-1
	MOVEM 7,MEMPA+7		;SAVE SOME AC'S
	MOVEI 7,MEMPA
	BLT 7,MEMPA+6
	CONO PI,1B19+1B20	;CLEAR PAR FLAG AND DISABLE INTERRUPT
	PGROFF			;TURN OFF PAGER
	MOVEI 1,[SIXBIT '$MPE DETECTED BY /']
	JSR BUGMSG
	MOVE 6,[SIXBIT ', PC=/']
	SKIPN 5,DEVMPE		;MESSAGE LEFT BY DEVICE?
	MOVE 5,[SIXBIT 'APR']	;NO, SAY APR
	MOVEI 1,5		;STRING IN 5-6
	JSR BUGMSG
	HRRZ 1,PIAPRX
	JSR BUGOPT
	MOVEI 1,[SIXBIT ', MONITOR/']
	MOVSI 2,UMODF
	TDNE 2,PIAPRX
	MOVEI 1,[SIXBIT ', USER/']
	JSR BUGMSG
	MOVEI 1,[SIXBIT '$ LOC    CONTENTS$/']
	JSR BUGMSG
	SETZB 6,MEMPA+1		;CLEAR COUNTERS FOR ERRORS AND BAD ERRS
	MOVEI 2,20		;START AT LOC 20
MEMP2:	MOVE 0(2)		;REFERENCE THE LOCATION
	CONSZ APR,APNXM		;NXM?
	JRST [	ADDI 2,1000-1	;YES, INCREMENT TO NEXT PAGE
		CONO APR,APNXM+APCHNS ;CLEAR NXM FLAG
		JRST MEMP4]
IFN KAFLG,<
	CONSZ PI,1B19		;MPE IN THIS LOCATION?
>
IFN KIFLG,<
	CONSZ APR,1B19
>
	JRST MEMP1		;YES, GO REPORT IT
MEMP4:	CAIGE 2,777777		;DONE ALL OF CORE?
	AOJA 2,MEMP2		;NO, DO NEXT LOCATION
	MOVEI 1,[SIXBIT '$/']
	SKIPN 6			;IF NO DETECTED ERRORS,
	MOVEI 1,[SIXBIT '$NONE FOUND$/'] ;SAY SO
	JSR BUGMSG		;TYPE EOL
	CONO PI,1B21		;RE-ENABLE MPE INTERRUPT
	PGRON			;TURN PAGER BACK ON
	MOVSI 7,MEMPA		;RESTORE AC'S
	BLT 7,7
	HULOCK DDTLCK		;RELEASE LOCK
	PION
MEMCHK: JFCL   ;;	BUG(CHK,<MEMORY PARITY ERROR DETECTED BY APR OR DEVICE>)
	JUMPN 1,MEMP8		;CRASH IF FATAL ONES FOUND
	SKIPE DEVMPE		;DEVICE DETECTED?
	JRST MEMP7		;YES, PROCEED
	MOVE 1,PIAPRX		;NO, APR
	TLNN 1,UMODF		;WAS IN MONITOR MODE?
MEMP8:	BUG(HLT,<FATAL PARITY ERROR>)
	MOVEI 1,MPEINT		;GIVE INTERRUPT TO USER
	HRL 1,FORKX
	JSR SCDRQ
	RESKED
MEMP7:	SETZM DEVMPE
	MOVE 1,TODCLK		;HERE TO PROCEED, UNLESS...
	EXCH 1,PARTIM		;SET TIME OF THIS MPE, GET TIME OF LAST
	SKIPE DBUGSW		;SYSTEM ATTENDED?
	JRST OV0		;YES, SKIP TIME CHECK
	ADD 1,[^D120000]	;WAS LAST ERROR WITHIN 5 MINUTES?
	CAML 1,TODCLK
	JRST MEMP8		;YES, FATAL
	JRST OV0		;NO, CONTINUE RUNNING

;FOUND MEM PAR ERR ON DIRECT REFERENCE

MEMP1:	MOVEM 0(2)		;REWRITE WORD TO ELIMINATE MPE
	ADDI 6,1		;COUNT ERRORS
	CONO PI,1B19		;CLEAR FLAG
	CAIL 6,20		;REPORTED A LOT ALREADY?
	JRST MPEX1		;YES, QUIT REPORTING THEM
	MOVEI 1," "
	JSR BUGTYO
	MOVEI 1,0(2)
	JSR BUGOPT		;TYPE ADDRESS
	MOVEI 1," "
	JSR BUGTYO
	HLRZ 1,0(2)
	JSR BUGOPT		;TYPE LH OF BAD WORD
	MOVEI 1,","
	JSR BUGTYO
	HRRZ 1,0(2)
	JSR BUGOPT		;TYPE RH OF BAD WORD
	MOVEI 1,[SIXBIT '$/']	;TYPE EOL
	JSR BUGMSG
MPEX1:	MOVEI 1,0(2)		;TRY TO DECIDE IF ERROR IS IN SENSITIVE
	LSH 1,-^D9		;PAGE. IF SO, BUMP FATAL COUNT
;
	CAMGE 1,SWPCOR		;RESIDENT MON?
IFE IMSSS,<
	JRST MEMP5	>	;YES, TOO BAD
IFN IMSSS,<
	JRST [ CAIGE 2,640	;TEST FOR AUDIO
		CAIGE 2,600
		JRST MEMP5
		AOS DEVMPE
		JRST MEMP4 ]
>;END OF IMSSS
	MOVSI 3,SWPERR		;MARK ERROR IN PAGE
	IORM 3,CST3(1)
	MOVE 3,CST2(1)		;OWNER
	TLNE 3,-1		;SPT?
	JRST MEMP6		;NO
	CAIGE 3,NOFN		;YES, INDEX BLOCK
	JRST MEMP5		;DANGEROUS TO HAVE BAD XB'S AROUND
	MOVE 3,SPTH(3)		;GET OWNER
	JUMPE 3,MEMP5		;DANGEROUS TO HAVE BAD PT'S OR PSB'S
MEMP6:	HLRZ 3,3		;OWNING PT
	CAMN 3,MMSPTN		;MON MAP?
;
;  I4 CHANGE
;;;	JSP 7,SENERR	;TEST ERROR IN SENSITIVE PAGE
;;;	JFCL		;ERROR RET #1
;
MEMP5:	AOS MEMPA+1		;COUNT FATAL ERRORS
	JRST MEMP4		;CONTINUE CORE SCAN

LS MEMPA,10		;STORAGE FOR AC'S

GS DEVMPE,1		;AOS'D TO REQUEST CORE SCAN
LS PARTIM,1		;TIME OF LAST PAR ERR

;NON-PI 6-DIGIT NUMBER TYPEOUT ON CONSOLE TTY

BUGOP1:	0
BUGOPT:	0
	MOVEM 1,BUGOP1
	MOVE 0,[POINT 3,BUGOP1,17]
BUGOP2:	ILDB 1,0
	ADDI 1,"0"
	JSR BUGTYO
	TLNE 0,770000
	JRST BUGOP2
	JRST @BUGOPT

;DISPATCHES FOR PI CHANNELS 4-6
;USE JSYS TO CALL ROUTINES ON KA-10, FAKE IT ON KI-10

   IFN KAFLG,<
DEFINE DJSYS (XX)
<	JSYS XX>
   >

   IFN KIFLG,<		;NO JSYS, FAKE IT AT RUNTIME
DEFINE DJSYS (XX)
<	MOVE 4,XX
	HLRZ 3,4
	JSP 2,DJSYS0>

DJSYS0:	MOVEM 2,0(3)		;STORE PC VIA LEFT HALF OF JSYS WORD
	JRST	0(4)		;JUMP VIA RH OF JSYS WORD
   >

PISC4:	XWD PI4R,.+1
	MOVEM 4,PI4AC+4
	MOVEI 4,PI4AC
	BLT 4,PI4AC+3
	MOVEM P,PI4AC+5
	SKIPE CPUID
	JRST [ JSR BUGCHK
		MOVE 4,PI4AC+4
		JEN @PI4R]
PCMCHR:
DACCHR:
DRMCHR:	MOVE P,[IOWD P4NP,P4PDL]
	IFDEF DRMCHN,<DJSYS DRMSV>
	IFDEF DACCHN,<DJSYS DACSV>

	IFDEF PCMCHN,<DJSYS PCMSV>

	MOVSI 4,PI4AC
	BLT 4,4
	MOVE P,PI4AC+5
	JEN @PI4R

KS PI4AC,6
KS PI4R,2

PISC5:	XWD PISC5R,.+1
	MOVEM 4,PI5AC+4		;SAVE AC'S 0-4
	MOVEI 4,PI5AC
	BLT 4,PI5AC+3
	MOVEM P,PI5AC+5		;SAVE STACK
	SKIPE CPUID
	JRST [ JSR BUGCHK
		MOVE 4,PI5AC+4
		JEN @PISC5R]
PTRCHR:
MTACHR:
DSKCHR:
DTACHR:
PISC51:	MOVE P,[IOWD P5NP,P5PDL]
	IFDEF DSKCHN,<DJSYS DSKSV>
	IFDEF IMPCHN,<	AOSE IMPPI
			JRST .-1	;LOCK PI LEVEL
			DJSYS IMPSV
			HULOCK IMPPI>
	IFDEF DTACHN,<DJSYS DTASV>
;	IFDEF DSKCHN,<DJSYS DSKSV>
IFE IMSSS,<
	IFDEF MTACHN,<DJSYS MTASV>>

	IFDEF PTRCHN,<DJSYS PTRSV>
	MOVSI 4,PI5AC		;RETURN FROM DEVICE ROUTINES HERE
	BLT 4,4			;RESTORE AC'S 0-4
	MOVE P,PI5AC+5
	JRST 12,@PISC5R
IMPCHR:
	HULOCK IMPPI			;RELEASE IMP PI LOCK
	JRST PISC51

PISC6:	XWD PI6R,.+1
	MOVEM 4,PI6AC+4
	MOVEI 4,PI6AC
	BLT 4,PI6AC+3
	MOVEM P,PI6AC+5
	SKIPE CPUID
	JRST [ JSR BUGCHK
		MOVE 4,PI6AC+4
		JEN @PI6R ]
PLTCHR:
PTPCHR:
DSPCHR:
LPTCHR:
PISC61:	MOVE P,[IOWD P6NP,P6PDL]
	IFDEF DLSCHN,< AOSE DLSPI	;LOCK DLS PI-LEVEL
			JRST .-1
			DJSYS DLSSV
			HULOCK DLSPI>
	IFDEF DSPCHN,<DJSYS DSPSV>
	IFDEF LPTCHN,<DJSYS LPTSV>
	IFDEF PTPCHN,<DJSYS PTPSV>
	IFDEF PLTCHN,<DJSYS PLTSV>
	IFDEF DLSCHN,<
	SKIPL TTNIT1
	JRST PISC61 >		;CHECK ISB FLAG
	MOVSI 4,PI6AC
	BLT 4,4
	MOVE P,PI6AC+5
	JRST 12,@PI6R
DLSCHR:	HULOCK DLSPI
	JRST PISC61

KS PI6R,2
KS PI6AC,6

	INTERN MENTR,MRETN,MONUUO,UJSYS,MRETNE
	EXTERN GETPAT

UU60:	XWD FPC,ILUUO		;JSYS AT 61

IUUO:	MOVE 1,XMENTR		;RESTORE AC1
ILUUO:	JSYS MENTR
	ITERR ILINS1		;ILLEGAL UUO

;UUO DISPATCH

UUOH:	XWD FPC,.+1		;41 CONTAINS JSYS UUOH
	MOVEM 1,XMENTR		;SAVE AC1
	MOVE 1,FPC
	TLNE 1,UMODF		;USER CALL?
	JRST UUOHX		;YES
	MOVE 1,XMENTR
	BUG(CHK,<UUO FROM MONITOR>)
MONUUO:	JRST ILUUO

UUOHX:	HLRZ 1,KI40		;GET OP CODE
	LSH 1,-^D9
UUOHK:	CAIL 1,100		;OUT OF BOUNDS?
	JRST IUUO		;YES, ILLEGAL INSTRUCTION
	CAIL 1,40		;10/50 UUO?
	JRST UU1050		;YES
	JUMPE 1,IUUO		;0 IS ALWAYS ILLEG
	BUG(HLT,<01-37 UUO FROM USER MODE>)

REPEAT 0,<	;THIS WON'T BE USED UNLESS SOMEBODY WANTS
		;MON-MON OR USER-MON UUO'S INSTALLED
	SKIPL 1,UUOT(1)		;GET DISPATCH WORD, CHECK TYPE
	JRST UUOH2		;SLOW
	EXCH 1,XMENTR		;FAST, RESTORE AC1, SETUP DISPATCH ADR
	JRST @XMENTR		;COMMENCE ROUTINE
>

UU1050:	SKIPN PATADR		;GOT PAT NOW?
	JRST [	MOVE 1,XMENTR	;NO
		JRST GETPAT]	;GO GET IT
	MOVE 1,KI40		;MOVE STUFF FOR 10/50 COMPAT
	XCTUU PATU40		;CONTAINS UMOVEM 1,MONUUO
	MOVE 1,FPC
	XCTUU PATUPC		;CONTAINS UMOVEM 1,MONUPC
	MOVE 1,PATADR		;ENTRY VECTOR
	HRRM 1,FPC
	MOVE 1,XMENTR
IFN SUMEX,<
	EXCH	1,FPC
	MOVEM	1,SAVFPC	;SAVE FOR DEBUGGING
	EXCH	1,FPC
>
	XCT MJRSTF

;ALL UNDEFINED JSYS'S

UJSYS:	JSYS MENTR
	ITERR ILINS2

;SLOW-CALL SETUP ROUTINE

MENTR:	XWD XMENTR,UUOH1	;SLOW JSYS'S BEGIN WITH  JSYS MENTR

UUOH2:	EXCH 1,XMENTR		;SLOW UUO'S ENTER HERE
UUOH1:	SETOM SLOWF
	EXCH 0,FPC		;GET RETURN PC
	TLNE 0,UMODF		;USER OR MONITOR MODE?
	JRST MENT1		;USER
	AOSGE INTDF		;INTDF ALLRIGHT?
	BUG(CHK,<AT MENTR - INTDF OVERLY DECREMENTED>)
	SOS INTDF
	PUSH P,INTDF
	PUSH P,MPP		;SAVE PREVIOUS ERRORSET
	PUSH P,0		;SAVE RETURN
	MOVEM P,MPP		;SAVE CURRENT STACK POINTER
	AOS P,ACBAS		;GET NEXT AC BASE ADR
	CAIL P,<EUACB>B39	;USED ALL BLOCKS OF AC'S?
	BUG(HLT,<MENTR - NO MORE AC BLOCKS>)
	SETACB P		;GIVE IT TO PAGER
MENT2:	MOVE 0,XMENTR		;LOCAL RETURN => FPC
	EXCH 0,FPC		;AC0 => 0
	SETZ P,
	XCTMU [BLT P,P-1]	;MOVE FROM REAL AC'S TO USER BLOCK
	MOVE P,MPP		;RESTORE P
	SETZM SLOWF
IFN SUMEX,<
	EXCH	1,FPC
	MOVEM	1,SAVFPC	;SAVE FOR DEBUGGING
	EXCH	1,FPC
>
	XCT MJRSTF		;JRSTF @FPC  OR INTERRUPT

MENT1:	MOVEM P,XMENT1		;SAVE USER'S AC-P
   IFN KIFLG,<
	MOVSI P,(1B6)
	IORM P,XMENTR>		;BE SURE CALL FROM USER IS SET
	MOVE P,UPP		;GET STACK POINTER
	PUSH P,0		;TWO RETURNS
	PUSH P,0		;SO ONE CAN BE DIDDLED
	MOVEM P,MPP
	SETOM INTDF
	MOVE P,ACBAS1		;FIRST AC BASE TO USE
	MOVEM P,ACBAS
	SETACB P		;SET PAGER
	MOVSI 0,400000
	MOVE P,FORKX
	ANDCAM 0,FKCNO(P)	;SET IN MONITOR FOR SCHEDULING
	MOVE P,XMENT1		;RESOTRE USER'S AC-P
	UMOVEM P,P		;PUT USER'S AC-P WHERE IT BELONGS
	JRST MENT2

;SLOW-CALL RETURN

MRETNE:	MOVEM 1,LSTERR		;ERROR RETURN, SAVE ERROR CODE
	UMOVEM 1,1		;AND RETURN IT TO USER ALSO
MRETN:
	SETOM SLOWF		;RESET FLAG
	AOSGE INTDF		;INTDF OK?
	BUG(CHK,<AT MRETN - INTDF OVERLY DECREMENTED>)
	MOVE P,MPP		;GET STACK POINTER AT LAST ENTRY
	POP P,0			;POP RETURN
	MOVEM 0,FPC		;SETUP RETURN
	TLNN 0,UMODF		;USER MODE?
	JRST MRETN1		;NO
	MOVSI 1,400000
	MOVE 2,FORKX
	IORM 1,FKCNO(2)	;SET IN USER FOR SCHEDULING
;				CLEAR TEMPORARY-FORCED-CPU FLAG
	MOVSI 1,(3B2)
	ANDCAM 1,FKCNO(2)
	SETZ P,
	XCTUM [BLT P,P]		;RESTORE USER AC'S
   IFN KIFLG,<
	MOVEM P,XMENT1
	SOS P,ACBAS
	SETACB P
	MOVE P,XMENT1>
IFN SUMEX,<
	EXCH	1,FPC
	MOVEM	1,SAVFPC	;SAVE FOR DEBUGGING
	EXCH	1,FPC
>
	XCT MJRSTF		;RETURN OR INTERRUPT

MRETN1:	MOVEM P,MPP		;SAVE P
	SETZ P,
	XCTUM [BLT P,P-1]	;RESTORE AC'S
	SOS P,ACBAS		;RESET AC BASE TO LAST ONE
	CAIGE P,<UACB>B39	;BEFORE BEGINNING OF AC BLOCKS?
	BUG(HLT,<MRETN - TRIED TO OVER-POP AC BLOCKS>)
	SETACB P
	MOVE P,MPP
	POP P,MPP		;RESTORE PREVIOUS STACK POINTER
	POP P,INTDF		;RESTORE INTERRUPT DEFERRED STATE
	SETZM SLOWF
IFN SUMEX,<
	EXCH	1,FPC
	MOVEM	1,SAVFPC	;SAVE FOR DEBUGGING
	EXCH	1,FPC
>
	XCT MJRSTF		;RETURN OR INTERRUPT

REPEAT 0,<	;NOT USED UNLESS MON-MON OR USER-MON UUO'S INSTALLED

;UUO DISPATCH TABLE

	DEFINE UUD (N,T)
<	EXTERN N
	XWD T*400000,N>

UUOT:	REPEAT 40,<XWD 400000,ILUUO>

	REPEAT 40,<XWD 0,GETPAT> ;LOADS 10/50 COMPATIBILITY
>

;LAST PAGE

   IFN KAFLG,< END> ;IF KI, MORE FILES TO FOLLOW


