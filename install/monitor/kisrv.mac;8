;<MON>KISRV.MAC;8    14-JAN-77 14:51:01    EDIT BY SWEER
;SAVE KIMPFW OR KIUPFW FOR DEBUGGING
;<DEC/DLM>KISRV.MAC;13    17-DEC-72 22:31:19	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;12    20-NOV-72 19:17:27	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;11    16-NOV-72 17:06:13	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;10    13-NOV-72 18:57:35	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;12     3-NOV-72 14:45:57	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;11    28-OCT-72 16:26:45	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;10    23-OCT-72 22:48:03	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;9    20-OCT-72 13:51:27	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;8    18-OCT-72 22:59:08	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;7    15-OCT-72 23:29:40	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;6    15-OCT-72 22:51:30	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;5    14-OCT-72  0:55:44	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;4    12-OCT-72 16:33:01	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;3    12-OCT-72 14:25:49	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;2    12-OCT-72 12:39:16	EDIT BY MURPHY
;<DEC/DLM>KISRV.MAC;1    12-OCT-72  0:36:48	EDIT BY MURPHY

;KI-10 SERVICE MODULE
;SIMULATION FOR BBN PAGER, AND HANDLING OF KI-10 STYLE UUO'S.

;CELLS IN USER PROCESS TABLE (UPT)

LUUO=KIEPT+40		;LOCAL (01-37) UUO WORD
KIMUUO=424		;MUUO WORD (GETS OP CODE AND EFF ADR)
KIMUPC=425		;MUUO PC
KIMPFW=426		;PAGE FAULT WORD, MONITOR
KIUPFW=427		;PAGE FAULT WORD, USER
KIP340=400-340/2	;BASE FOR MONITOR PAGES 340-377

KIASTK=1000-<EUACB-UACB>	;AC STACK - AS MUCH AS IS IN PSB
KIEXPG=450			;SAVE AREA IN UPT FOR EXEC PAGES

;ACCESS BITS IN MAP HALF-WORD

KIAXB=1B18		;READ ACCESS
KIWB=1B20		;WRITE ACCESS BIT

;LOCAL STORAGE

LS KIRFLG,1		;FLAG FOR RECOMPUTING UPT AFTER GCCOR
LS KIPPT1,125		;TEMPLATE FOR PORTION OF MON MAP

;RESERVED STORAGE IN KIEPT

KS KIAGER,1		;SIMULATED PAGER AGE REGISTER
KS KIPUR,1		; " PROCESS USE REGISTER
KS KITLCK,1		; LOCK TO DETECT RECURSIVE ENTRIES
KS KITAC,5		;SAVED AC'S
KS KIMAC1,1		;SAVE AC FOR MUUO HANDLERS
KS KIMAC2,1		; ..
KS KIACB,1		;AC BASE REG AT CALL TO SETACB
KS KIPGW0,1		;PAGER WORD WITH KIEPT ADR
KS KIPGWD,1		;PAGER WORD WITH AC BLOCK SET AS APPROPRIATE
KS KIPGWC,1		;PAGER WORD WITHOUT AC BLOCK SET
KS KXUPT,1		;UPT POINTER

KS KIP7A,1		;SCDCHN PI TEMP
KS KIP7F,1		;SCDCHN INTERRUPT OCCURED FLAG
KS KIP7Q,1		;REQUEST FLAG FOR SIMULATING JRSTF ON CH7
KS KIP7P,1		;PC FOR SIMULATED JRSTF
LS KIMLKF,1		;FLAG NOTING WHEN PAGE LOCKED OR UNLOCKED
KS CPUID,1		;0 IF CPU0, 1 IF CPU1
KS KIECPU,1		;PHYSICAL ADR OF OTHER CPU'S PAGE TABLE
KS KI40,1		;SIMULATED LOC 40 FOR UUO'S
KS PGR71,1		;SIMULATED BBN PAGER WORD
KS PGR72,1		;SIMULATED BBN PAGER WORD

; JSR LOCATIONS THROUGH KIEPT
KS LUUOH,2		;LUUO HANDLER
KS KIPSAB,2		;SET AC BASE
KS KIPCLD,2		;CLEAR/RELOAD PAGER

;COUNTERS FOR SIMULATION ROUTINES

KS KIPJCT,1		;EXEC JSYS COUNT
KS KIPFCT,1		;PAGE FAILURE COUNT
KS KIPCCT,1		;CLD COUNT
KS KIPLCT,1		;LOCK SCAN COUNT
KS KIPMCT,1		;MONCLR COUNT
KS KIPACT,1		;AGE SET COUNT
KS LASTPF,1		;LAST MON OR USER PAGE FAULT WORD

;INIT PAGING AND MUUO HANDLERS

PAGRST:
	SKCPU0			;SKIP OF CPU0
	JRST [			;NO-CPU1
		MOVEI 1,KIAXB+KIWB+<KIEPT1/1000>
		HRRM 1,KIEPT1+<KIEPG/2>  ; MAP ENTRY FOR CPU0
		MOVE 1,KIPGWB		;BASIC PAGER WORD
		MOVEI 2,1		;CPU ID
		MOVEI 3,KIEPT0		;OTHER CPU'S PAGE TABLE
		JRST PAGRS2]
	MOVEI 1,KIAXB+KIWB+<KIEPT0/1000>
	HRRM 1,KIEPT0+<KIEPG/2>	; MAP ENTRY FOR CPU0
	MOVE 1,KIPGWA		;SET UP STANDARD PAGER WORD
	MOVEI 2,0		;CPU 0
	MOVEI 3,KIEPT1		;OTHER CPU'S PAGE TABLE
PAGRS2:
	DATAO PAG,1		;NOTIFY PAGING HARDWARE
	MOVEM 1,KIPGW0
	MOVEM 2,CPUID		;SAVE CPU ID
	MOVEM 3,KIECPU
	MOVEM 1,KIPGWD
	MOVEM 1,KIPGWC
	MOVEI 1,KIUPT
	MOVEM 1,KXUPT
	SETOM KITLCK
	MOVE 1,[XWD IEPT0,KIEPT+420]
	BLT 1,KIEPT+423

	SKIPE CPUID		;ONLY DO NEXT ON CPU0
	RET
	MOVE 1,[XWD IUPT0,KIUPT+420]
	BLT 1,KIUPT+437		;INIT UPT WITH TEMPLATE
	MOVSI 1,-NBP		;INIT ALL UPTS
IFE IMSSS,< MOVE 2,SWPCOR
	LSH 2,^D9 >
IFN IMSSS,<
	HRRI 2,200000 >		;FIRST PAGE RESERVED
PAGRS1:	HRLI 2,400000
	MOVEM 2,KITBL(1)	;BALSET POINTER
	HRLI 2,KIUPT
	MOVE 3,2
	BLT 3,777(2)		;COPY TEMPLATE
	ADDI 2,1000
	AOBJN 1,PAGRS1
	RET

;NORMAL PAGER WORD. FIXED LOCATION UPT AND EPT, SET BOTH AND ALLOW
;OVERFLOW TRAPS. ENABLE USER ADDRESS FOLLOWING.

KIPGWA:	1B0+1B4+<KIUPT>B26+1B18+1B22+<KIEPT0>B44
KIPGWB: 1B0+1B4+<KIUPT>B26+1B18+1B22+<KIEPT1>B44

;UPT AND EPT TEMPLATES

IUPT0:	.PGTRP			;USER PAGE FAULT TRAP INSTRUCTION
	JFCL			;USER AROV TRAP
	.PDOVT			;USER PDL OV TRAP
	JFCL			;USER TRAP 3

	0			;MUUO AND PAGE FAIL WORDS (4)
	0
	0
	0

	KIMUOM			;KERNAL NO-TRAP (JSYS)
	KITRPM			;KERNAL TRAP (PAGING, PDL OV)
	KIMUOS			;SUPV. NO-TRAP (NOT USED)
	KITRPS			;SUPV. TRAP (NOT USED)
	1B6+KIMUOU		;USER (CONC.) NO-TRAP
	1B6+KITRPU		;USER (CONC.) TRAP
	1B6+KIMUOU		;USER (PUBLIC) NO-TRAP (JSYS, 10/50)
	1B6+KITRPU		; " TRAP (PAGING, OV, PDL OV)
				;TRAPS FROM USER SET UXCT BIT

IEPT0:	.PGTRP			;MONITOR PAGE FAULT TRAP INSTRUCTION
	JFCL			;MONITOR AROV
	.PDOVT			;MONITOR PDL OV
	JFCL			;MONITOR TRAP 3

;PI INITIALIZATION

PIINIT:	MOVSI 4,-NPISET
PII1:	HRRZ 1,PISETT(4)	;E OF JSYS WHICH WOULD BE USED
	HLRZ 2,PISETT(4)	;WHERE IT SHOULD GO
	HLRZ 3,0(1)		;OLD PC ADR FROM C(E)
	HRLI 3,<JSR>B53		;CONSTRUCT A JSR
	MOVEM 3,KIEPT(2)
	HRRZ 2,0(1)		;JUMP ADR FROM C(E)
	HRLI 2,<JRST>B53	;CONSTRUCT A JRST
	MOVEM 2,1(3)		;PUT IT 1 AFTER OLD PC WORD
	AOBJN 4,PII1
	MOVE 1,[JSR LUUOH]	;SETUP LUUO ENTRY
	MOVEM 1,LUUO+1
	MOVE 1,[JRST LUUOH1]	;LUUO HANDLER
	MOVEM 1,LUUOH+1
	CONO APR,123300+APCHNS
	CONO PI,642200+177
	RET

;KI10 PROCESSOR CONDITIONS - FROM PIAPR

PIAPR2:	MOVEM 1,PI1AC1
	CONSZ APR,1B22		;AC FAILING?
	JRST ACFAIL		;TSK TSK
	CONSZ APR,1B28		;PAGE FAILURE ON PI INSTRUCTION
	BUG(HLT,<IO PAGE FAILURE>)
	CLSB APRCHN
	SKIPN DEVMPE		;DEVICE DETECTED PARITY ERROR?
	CONSZ APR,1B19		;PROCESSOR DETECTED PARITY ERROR?
	JRST MEMPAR		;YES
	CONSZ APR,APNXM		;NXM?
	JRST P1NXM
	JRST OV0		;RESTORE AC AND DEBRK

P1NXM:	MOVE 1,PIAPRX
	TLNN 1,UMODF		;OUT OF USER MODE
	BUG(HLT,<NXM DETECTED BY APR>)
	CONO APR,APNXM+APCHNS	;IF CONTINUED ...
	MOVEI 1,MPEINT
	JRST OV1		;SEND MPE INTERRUPT
;;;	JRST OV0

;GIVEN CORE PAGE IN 2 AND N IN 1, FETCH NTH WORD OF PAGE
;MAY BE CALLED AT ANY PI LEVEL

MOVRCA:	TRO 2,KIAXB		;CONSTRUCT PTR
	PUSH P,1
	PIOFF
	MOVE 1,KXUPT
	HRLM 2,KIP340+<PIPG/2>(1)	;ASSUMES PIPG IS EVEN NUMBER
	DATAO PAG,KIPGWD
	POP P,1
	MOVE 1,PIPGA(1)
	PION
	RET

;SAVE AND RESTORE STUFF POSSIBLY VULNERABLE WHEN SCHEDULER
;IS STARTING AND STOPPING PROCESS
;CALLED WITH JSP 7,

KISSAV:	DMOVE 5,KIMAC1		;SAVE UUO CELLS
	DMOVEM 5,KITMPS
	HRLI 5,KIEPT+300	;SAVE USER PRIVATE AREA
	HRR 5,KXUPT
	ADDI 5,KIEXPG
	MOVEI 6,0(5)
	BLT 5,76(6)		;SAVE IN UPT
	MOVE 5,KIPGWD
	TLNN 5,(1B2)		;AC BLOCK 1 IN USE?
	JRST KISSA1		;JO, DON'T NEED TO SAVE
	JRSTF	@[1B6+.+1]	;TURN ON UXCT FLAG
	MOVEI	5,UACB		;SAVE AC'S FROM USER BLOCK (BLOCK 1)
	XCTUM	[BLT 5,UACB+17]
	MOVE	5,[XWD KIASTK+20,UACB+20]
	HRLZ 6,KXUPT
	ADD 5,6			;ADD UPT BASE
	MOVE 6,ACBAS		;PREPARE TO MOVE AC STACK INTO PSB
	LSH 6,4
	CAIL 6,UACB+20		;ANY OF STACK NOW IN USE?
	BLT 5,17(6)		;YES, MOVE IT
KISSA1:	JRST 0(7)

KISLOD:	MOVSI 5,UMODF
	TDNE 5,PPC		;GOING TO USER?
	JRST [	MOVE 5,KIPGW0	;YES, BE SURE AC BLOCK CORRECT
		LDB 6,[POINT 13,KXUPT,26]
		DPB 6,[POINT 13,5,17]
		MOVEM 5,KIPGWC
		MOVEM 5,KIPGWD
		DATAO PAG,5
		MOVEI 5,<UACB>B39-1
		MOVEM 5,ACBAS
		DPB 5,[POINT 5,PGR71,22]
		JRST KISLO1]
	MOVE 5,KIPGWD
	TLNN 5,(1B2)		;BLOCK 1 IN USE?
	JRST KISLO1		;NO, DON'T RESTORE IT
	MOVE 5,[XWD UACB+20,KIASTK+20]
	ADD 5,KXUPT
	MOVE 6,ACBAS		;PREPARE TO MOVE AC STACK TO WHERE
	LSH 6,4			;HARDWARE SEES IT
	CAIGE 6,UACB		;FIRST BLOCK IN USE?
	JRST KISLO1		;NO
	CAIL 6,UACB+20		;ANY IN USE?
	JRST [	SUBI 6,UACB	;YES, MOVE IT
		ADD 6,KXUPT
		BLT 5,KIASTK+17(6)
		JRST .+1]
	JRSTF @[1B6+.+1]	;SET UXCT FLAG
	MOVSI 5,UACB		;RESTORE USER'S AC'S (BLOCK 1)
	XCTMU [BLT 5,17]
KISLO1:	DMOVE 1,KITMPS		;RESTORE UUO CELLS
	DMOVEM 1,KIMAC1
	MOVE 1,KXUPT
	SETZM KIMPFW(1)
	MOVE 1,[JRST ENSKED+1]
	MOVEM 1,ENSKR+1		;JSR DISPATCH IS PSB
	HRLZ 1,KXUPT		;RESTORE USER PRIVATE PAGES FOR EXEC
	ADD 1,[XWD KIEXPG,KIEPT+300]
	BLT 1,KIEPT+375
	JRST 0(7)
;SETUP OVERFLOW TRAP INSTRUCTION IF PROCESS HAS ENABLED OV INTERRUPTS

SETOVF:	MOVE 1,PSICHM		;PROCESS CHN MASK
	MOVSI 2,<JFCL>B53	;USE JFCL IF NO INTS
	TLNE 1,(1B6+1B7)	;OVERFLOW OR FLOATING OV?
	MOVSI 2,<.AROVT>B53	;YES, USE TRAP MUUO
	MOVE 1,KXUPT
	MOVEM 2,421(1)
	RET

;CODE FROM KIBGN TO KIEND IS PROTECTED FROM RESCHEDULING

	LIT			;ALL LITERALS FROM UNPROTECTED CODE
KIBGN:	BLOCK 40		;PATCH SPACE

;ROUTINE FOR HIGH-RESOLUTION TIMING
; JSP 4,MTIME
;  RETURNS TODCLK IN 10^-5 SECONDS

MTIME:	MOVE 2,TODCLK		;GET TODCLK FIRST
	DATAI CLK,1		;GET PARTIAL TICK
	CAME 2,TODCLK		;JUST TICKED?
	JRST MTIME		;YES, TRY AGAIN
	IMULI 2,^D100		;CONVERT TODCLK TO SMALL UNITS
	ADD 1,2
	JRST 0(4)

;CLOCK ROUTINE FOR UPDATING TIMERS
;IN KA ALWAYS TRIGGERS SCHED PI LEVEL

APCLKI:				;CALLED WITH JSR
	PUSH P,1
	PUSH P,2
	SETZM PIAPRX
	NOPI
	MOVE 1,TODCLK
	SUBM 1,OLDTCK
	EXCH 1,OLDTCK
	ADDM 1,JOBRTT
	OKPI
	MOVN 1,1
	ADDM 1,RJQNT		;JOB TIME
	SKIPE CPUID
	JRST APCLI1
	MOVSI 2,-NPCLKS
	ADDM 1,BEGCLK(2)
	AOBJN 2,.-1
APCLI1:	POP P,2
	POP P,1
	RET

;MUUO NO-TRAP HANDLERS
;PAGER TRAPS CAN HAPPEN AT CERTAIN POINTS HEREIN, IN PARTICULAR
;DURING THE SIMULATION OF JSYS ON THE FETCH OF THE C(E) AND THE
;STORE OF THE PC.  SINCE THE PAGE TRAP IS VIA AN MUUO, KIMUPC AND
;KIMUUO MUST NOT BE VULNERABLE AT THOSE POINTS WHERE PAGE TRAPS CAN
;OCCUR.  CELLS WHICH ARE VULNERABLE AT THAT TIME (BUT ARE NOT
;MODIFIED BY PAGE TRAPS) ARE KIMAC1 AND KIMAC2.  ROUTINES ARE
;PROTECTED FROM RESCHEDULING EXCEPT ON PAGE TRAPS.

;MONITOR

KIMUOS:	BUG(CHK,<MUUO FROM SUPV. MODE>)
KIMUOM:	DMOVEM 1,KIMAC1
	MOVE 2,KXUPT
	MOVE 2,KIMUUO(2)
	LDB 1,[POINT 9,2,8]	;GET OP CODE
	CAIE 1,<JSYS>B62	;JSYS?
	JRST KIMUO5		;NO, UMOVE OR ILLEGAL
	MOVE 1,KXUPT
	MOVE 1,KIMUPC(1)
	TRNN 2,777000		;EXEC JSYS? I.E. E .L. 1000
	JRST KIMUO4		;YES
	CONSZ PI,177B27		;NO, CHECK PI LEVEL
	BUG(HLT,<JSYS IN PI ROUTINE>)
	MOVS 2,0(2)		;GET JSYS DISPATCH WORD
	MOVEM 1,0(2)		;STORE PC
	HLR 1,2			;COMBINE JUMP ADR WITH FLAGS
	JRST KIMUO3		;EXIT

;EXEC JSYS, FROM USER OR MONITOR

KIMUO4:	AOS KIPJCT		;COUNT OCCURRANCES
	MOVEM 1,FPC		;PC TO FPC ASSUMED
	JSP 1,.+1		;GET CURRENT FLAGS
	HRR 1,1000(2)		;COMBINE WITH JUMP ADR
	MOVE 2,0(1)		;FIRST WORD OF ROUTINE
	CAME 2,[JSYS MENTR]	;USUAL SETUP?
	JRST KIMUO3		;NO, CONTINUE JSYS SIMULATION
	ADDI 1,1		;YES, GO DIRECTLY TO MENTR
	MOVEM 1,XMENTR		;DUMMY UP MENTR LOCAL RETURN
	HRRI 1,UUOH1		;ACTUAL START OF MENTR
KIMUO3:	MOVEM 1,KIP7P		;EXIT PC
	DMOVE 1,KIMAC1
	JRST KITRET		;EXIT AND CHECK FOR CH7 NEEDS

;UNDEFINED MUUO

KIBADU:	MOVEM 2,KI40
	MOVE 1,KXUPT
	MOVE 1,KIMUPC(1)
	MOVEM 1,FPC		;PUT PC IN NORMAL PLACE
	JSP 1,.+1		;GET CURRENT FLAGS
	HRRI 1,KIBAD1		;SETUP EXIT ADDRESS
	JRST KIMUO3

KIBAD1:	BUG(CHK,<ILLEG UUO FROM MON>)
BADUUO:	JRST ILUUO		;DO REGULAR ITRAP

;MUUO FROM MON, NOT JSYS
;UMOVE'S SHOULD NEVER OCCUR, BUT IF THEY DO, THIS HANDLES THEM

KIMUO5:	CAIL 1,100		;UMOVE?
	CAILE 1,103
	JRST KIBADU		;NO, ILLEGAL
	TLC 2,300000		;TRANSLATE TO EQUIVALENT MOVE
	EXCH 2,KIMAC2
	MOVE 1,KXUPT
	HLLZ 1,KIMUPC(1)	;RESTORE FLAGS, SPECIFICALLY B6
	JRSTF .+1(1)
	MOVE 1,KXUPT
	MOVE 1,KIMUPC(1)
	EXCH 1,KIMAC1		;CAN GET PAGE FAULT, SO MOVE RETURN
	XCTUU KIMAC2		;DO FUNCTION
	MOVEM 1,KIP7P		;SETUP EXIT
	MOVE 1,KIMAC1
	EXCH 1,KIP7P
	JRST KITRET

;MUUO FROM USER

KIMUOU:	DMOVEM 1,KIMAC1
	MOVE 2,KXUPT
	MOVE 2,KIMUUO(2)
	LDB 1,[POINT 9,2,8]
	CAIE 1,<JSYS>B62	;JSYS?
	JRST KIMUO2		;NO, 10/50 MONITOR CALL
	MOVE 1,KXUPT
	MOVE 1,KIMUPC(1)
	TRNN 2,777000		;EXEC JSYS?
	JRST KIMUO4		;YES
	XCTUU [MOVS 2,0(2)]	;NO, INTERPRET USER-USER JSYS
	XCTUU [MOVEM 1,0(2)]	;STORE PC (CAN PAGE FAULT HERE AND .-1)
	HLR 1,2			;SETUP JUMP ADDRESS AND FLAGS
	TLZ 1,(1B4)		;BUT FLUSH FIRST-PART (BIS)
	JRST KIMUO3

;10/50 MONITOR CALL

KIMUO2:	MOVEM 2,KI40		;FAKE OLD-STYLE UUO
	MOVE 2,KXUPT
	MOVE 2,KIMUPC(2)
	MOVEM 2,FPC
	MOVE 2,KIMAC1		;SETUP LIKE START OF UUOH
	MOVEM 2,XMENTR
	JSP 2,.+1		;GET CURRENT FLAGS
	HRRI 2,UUOHK		;SETUP EXIT ADDRESS
	MOVEM 2,KIP7P
	MOVE 2,KIMAC2
	JRST KITRET

;MUUO TRAP HANDLERS
;EXECUTED BECAUSE OF PAGE FAULT, OV, OR PDLOV

;TRAP MUUO FROM USER MODE

KITRPU:	AOSE KITLCK		;LOCK TO ENSURE NO RECURSIVE TRAPS
	BUG(HLT,<RECURSIVE TRAP>)
	MOVEM 4,KITAC+4		;SAVE AC'S
	MOVEI 4,KITAC
	BLT 4,KITAC+3
	MOVE 1,KXUPT
	LDB 1,[POINT 9,KIMUUO(1),8]
	CAIL 1,40		;RANGE OK?
	CAIL 1,40+MAXUTU
	BUG(HLT,<UNKNOWN TRAP INSTRUCTION>)
	JRST UTUTAB-40(1)	;DISPATCH

UTUTAB:	JRST KIPTU		;PAGER
	JRST KIAROV		;OVERFLOW
	JRST KIPDOV		;PDL OV
MAXUTU==.-UTUTAB

;TRAP MUUO FROM MONITOR

KITRPS:	BUG(CHK,<TRAP FROM SUPV MODE>)
KITRPM:	AOSE KITLCK
	BUG(HLT,<RECURSIVE TRAP>)
	MOVEM 4,KITAC+4
	MOVEI 4,KITAC
	BLT 4,KITAC+3
	MOVE 1,KXUPT
	LDB 1,[POINT 9,KIMUUO(1),8]
	CAIL 1,40
	CAIL 1,40+MAXMTU	;CHECK RANGE
	BUG(HLT,<UNKNOWN TRAP INSTRUCTION>)
	JRST MTUTAB-40(1)

MTUTAB:	JRST KIPTM
	BUG(HLT,<OV TRAP IN MON>)
	JRST KIMPOV
MAXMTU==.-MTUTAB

;LOCAL UUO HANDLER

LUUOH1:
	MOVEM 1,KITAC
	LDB 1,[POINT 9,LUUO,8]
	CAIL 1,MAXLUO
	JRST LUUOX
	ADDI 1,LUOTAB
	EXCH 1,KITAC
	JRST @KITAC

LUOTAB:	JRST LUUOX1
	JRST KIMCLR
MAXLUO==.-LUOTAB

LUUOX1:	MOVEM 1,KITAC
LUUOX:	MOVE 1,LUUOH
	MOVEM 1,FPC		;SETUP USUAL PC
	HRRI 1,KIBAD1
	MOVEM 1,KIP7P
	MOVE 1,KITAC
	JRST KITRET

;TRAPS - OV AND PDL OV

KIAROV:	SETZ 1,
	MOVE 2,KXUPT
	MOVE 2,KIMUPC(2)	;GET FLAGS AT TIME OF TRAP
	MOVE 3,PSICHM		;USER'S CHANNEL ENABLED WORD
	TLNE 3,(1B6)		;OV ENB?
	TLZN 2,(1B0)		;AND OV ON? 
	JRST .+2
	MOVEI 1,6		;YES, CHN 6 
	TLNE 3,(1B7)		;FOV ENB?
	TLZN 2,(1B3)		;AND FOV ON? 
	JRST .+2		;NO
	MOVEI 1,7		;YES, CHANNEL 7 (OVERRIDES OV) 
	MOVE 3,KXUPT
	MOVEM 2,KIMUPC(3)	;ADJUSTED FLAGS FOR KA COMPATIBILITY
KITRP1:	MOVE 3,KXUPT
	MOVEM 1,KIMUUO(3)		;SAVE CHANNEL NUMBER
	MOVSI 4,KITAC
	BLT 4,4
;;;	PIOFF			;!! MAH @ SUMEX 6/75 !! PI CANNOT BE TURNED
				;OFF THIS LONG, AND THE AOS INSKED
				;IN ENTSK DOES THE SAME THING
	AOS INSKED
	ENTSKD			;ENTER SCHEDULER CONTEXT
;;;	PION
	MOVE 1,KXUPT
	MOVE 1,KIMUUO(1)	;CHANNEL NUMBER
	MOVE 2,FORKX
	JUMPE 1,.+2		;FOUND ANYTHING?
	CALL PSIRQ		;YES, REQUEST INTERRUPT
	MOVE 1,KXUPT
	MOVE 1,KIMUPC(1)
	TLZ 1,(1B9+1B10)	;FLUSH TRAP FLAGS
	MOVEM 1,PPC		;MOVE PC TO PSB
	SETOM KITLCK
	MOVEI 1,SCHED0		;EXIT ADDRESS--VIA SCHED TO GET
	MOVEM 1,KIP7P		;INTERRUPT SEEN
	AOS ISKED
	JRST KITRET

KIPDOV:	MOVEI 1,^D9		;CHANNEL 9 FOR PDL OV
	JRST KITRP1

KIMPOV:	JRST MSTKOV

;PAGER SIMULATION ROUTINES

;LOAD AGE REG

KIPLAG:	LDB 1,[POINT 9,PGR72,8]	;NEW AGE
	MOVEM 1,KIAGER		;REMEMBER IT
	AOS KIPACT
	RET

;SET AC BASE REG

KIPSB1:
	MOVEM 1,KIACB
	LDB 1,[POINT 5,PGR71,22] ;GET ARG
	ADDI 1,<PSB>B39		;INCLUDE OFFSET
	CAIGE 1,<UACB>B39	;CHECK RANGE
	JRST [	MOVE 1,KIPGWC	;USE AC BLOCK 0
		JRST KIPSA1]
	SUBI 1,<UACB>B39	;ADJUST FOR KIUPT
	ADDI 1,<KIASTK>B39
	LSH 1,^D13
	CONO PAG,0(1)
	MOVE 1,KIPGWC		;USE AC BLOCK 1
	TLO 1,(1B2)
KIPSA1:	MOVEM 1,KIPGWD
	DATAO PAG,KIPGWD
	MOVE 1,KIPSAB
	MOVEM 1,KIP7P		;SETUP RETURN
	MOVE 1,KIACB
	JRST KITRET

;CLEAR MON AR'S ONLY
;CALLED BY LUUO WITH ARG OF SPECIFIC PAGE TO CLEAR

KIMCLR:	AOSE KITLCK
	BUG(HLT,<RECURSIVE TRAP>)
	MOVEM 4,KITAC+4
	MOVEI 4,KITAC
	BLT 4,KITAC+3
	DATAO PAG,KIPGWD	;CLEAR REAL AR'S
	MOVE 1,LUUOH
	MOVEM 1,KIPCLD		;MOVE RETURN FOR KIPCLD
	HRRZ 1,LUUO
	JUMPE 1,KIMC1		;0 ARG MEANS CLEAR ALL
	AOS KIPMCT		;COUNT MCLR
	MOVEI 3,KIEPT
	CAIGE 1,400
	JRST [	MOVEI 3,KIP340
		ADD 3,KXUPT
		JRST .+1]
	CAIGE 1,340
	JRST KIMC2		;NOT MAPPED (SHOULDN'T HAPPEN)
	MOVEI 2,0(1)
	ROT 2,-1
	ADDI 2,0(3)
	SETZ 3,
	JUMPL 2,[HRRM 3,0(2)	;CLEAR PROPER HALF WORD
		JRST .+2]
	HRLM 3,0(2)
	CAIGE 1,PJMPG		;WITHIN LOCK-PROTECTED AREA?
;;;	CAIGE 1,PPRMPG+NRSPG
;;;	CAIL 1,NRPLBG/1000
	JFCL
	JRST KIMC2		;NO
	BUG(CHK,<MONCLR CALL FOR PROTECTED AREA>)
	JRST KIMC3

;SWITCH USER PAGE TABLE

KILUPT:	HRRZ 1,KITBL(10)	;GET UPT ADDRESS
	PIOFF			;FIX RECOMENDED BY R. SCHULTZ 8/6/75
	MOVEM 1,KXUPT
	LSH 1,-^D9		;GET PAGE NO.
	MOVE 2,KIPGW0
	DPB 1,[POINT 13,2,17]
	MOVEM 2,KIPGWD
	MOVEM 2,KIPGWC
	DATAO PAG,KIPGWD
	PION			;FIX RECOMENDED BY R. SCHULTZ 8/6/75
	RET


;CLEAR AND RELOAD PAGER
;ALL KI10 MAP SLOTS ARE CLEARED EXCEPT WHERE A LOCKED-IN-CORE
;PAGE IS POINTED TO

KIPCL0:	AOS KIPCCT		;COUNT OCCURRANCES
KIPCL6:	AOSE KITLCK
	BUG(HLT,<RECURSIVE TRAP>)
	MOVEM 4,KITAC+4		;SAVE AC'S
	MOVEI 4,KITAC
	BLT 4,KITAC+3
	SKIPN KIRFLG		;CLEAR UPTS REQUESTED
	JRST KIPC12
	MOVSI 1,-20
	SETZM KIEPT0+200(1)
	AOBJN 1,.-1		;ZERO PAGE TABLE FOR CPU0
	MOVSI 1,-20
	SETZM KIEPT1+200(1)
	AOBJN 1,.-1		;ZERO CPU1 PAGE TABLE
	MOVSI 1,-NBP
	MOVSI 2,400000
	IORM 2,KITBL(1)
	AOBJN 1,.-1
	SETZM KIRFLG
KIPC12:	SKIPGE 1,FORKX
	JRST KIPC10
	HRRZ 1,FKPT(1)
	SKIPL KITBL(1)		;NEEDS UPT UPDATE
	JRST KIMC1		;NO
	MOVSI 4,400000
	ANDCAM 4,KITBL(1)
KIPC10:
	HRR 1,KXUPT
	HRLI 1,0(1)
	ADDI 1,1
	SETZM -1(1)
	MOVE 2,KXUPT
	BLT 1,417(2)		;CLEAR USER MAP
	MOVE 1,KXUPT
	HRLI 1,0(1)
	ADD 1,[XWD KIEXPG,KIEXPG+1]
	SETZM -1(1)
	MOVE 2,KXUPT
	BLT 1,KIEXPG+76(2)	;ZERO EXEC PAGE COPY
KIMC1:	MOVE 1,[XWD KIEPT+300,KIEPT+301]
	SETZM -1(1)		;CLEAR MON PAGES NOT HANDLED BELOW
	BLT 1,KIEPT+375
	HRRZS KIEPT+376		;DON'T CLEAR MAP FOR PAGE TABLE
	LDB 1,[POINT 9,PGR72,8]	;GET NEW PARAMETERS - AGE
	MOVEM 1,KIAGER
	JSR KIPSAB		;SET AC BASE
	MOVE 1,PGR72		;PUR
	TLZ 1,(-1B9)
	MOVEM 1,KIPUR
	LDB 1,[POINT 11,PGR71,35] ;MBR (PSB)
	MOVSI 2,(CORMB)
	IORM 2,CST0(1)		;ASSUME PAGE WILL BE WRITTEN
	IORI 1,KIAXB+KIWB	;CONSTRUCT KI MAP WORD, ALL ACCESS
	HRRM 1,KIEPT+377	;ASSUMES PSB IN PAGE 777
	LDB 1,[POINT 11,PGR71,17] ;UBR (UPT)
	IORI 1,KIAXB		;READ ACCESS
	HRLM 1,KIEPT+377	;ASSUMES UPT IN PAGE 776
	AOSE  KIMLOK		;PROTECT WHILE FIXING TEMPLATE
	JRST .-1
	SKIPE KIMLKF		;PAGE LOCKED OR UNLOCKED RECENTLY?
	JRST KIMC3		;YES, GO SCAN MMAP
KIMCL7:
	MOVE 1,[XWD KIPPT1+40,KIEPT+220] ;TEMPLATE CONTAINS ENTRIES
	BLT 1,KIEPT+PJMPG/2	;FOR ALL MMAP PAGES LOCKED IN CORE
	HULOCK KIMLOK		;UNLOCK TEMPLATE CODE
	HRR 1,KXUPT
	ADDI 1,400
	HRLI 1,(1)
	SETZM 0(1)
	ADDI 1,1
	MOVE 2,KXUPT
	BLT 1,407(2)
KIMC2:	MOVE 1,KIPCLD		;RETURN ADR
	DATAO PAG,KIPGWD	;CLEAR REAL AR'S
	JRST KITR4		;RESTORE AC'S AND RETURN

;SCAN MMAP TO FIND ALL SLOTS CONTAINING LOCKED PAGE, EVEN IF INDIRECT
;PTR.  SETUP TEMPLATE PAGE TABLE WITH VALID ENTRIES FOR THESE SLOTS.

KIMC3:	AOS KIPLCT		;COUNT OCCURRANCES
	SETZM KIMLKF		;CLEAR FLAG
	MOVE 1,[XWD KIPPT1,KIPPT1+1]
	SETZM -1(1)
	BLT 1,KIPPT1+<PJMPG-PPRMPG>/2 ;CLEAR TABLE FIRST
	MOVSI 3,440-MDDTPG	;SCAN MMAP FROM PPRMPG TO PJMPG
	ADDI 3,100
	MOVEI 4,KIPPT1+40	;START AFTER SWAP. MON
KIPCL4:	SKIPE 1,MMAP+PPRMPG(3)	;ANY ENTRY HERE?
	JRST KIPCL1		;YES, ANALYZE IT
KIPCL5:	TLCE 4,(1B0)		;INCREMENT DEST PTR
	ADDI 4,1
	AOBJN 3,KIPCL4
	SKIPN CPUID
	JRST KIMCL7
	MOVE 1,[XWD KIPPT1+40,KIEPT0+220]
	BLT 1,KIEPT0+PJMPG/2
	JRST KIMCL7

KIPCL1:	MOVEI 2,PPRMPG(3)
	CAIGE 2,PPRMPG+NRSPG	;ABOVE SPECIAL PAGES?
	JRST KIPCL5		;NO
KIPCL9:	TLNE 1,INDBIT		;INDIRECT PTR?
	JRST KIPCL8		;YES
	TLNE 1,SHRBIT		;SHARE PTR?
	JRST [	LDB 2,[POINT 13,1,26] ;YES, GET SPT INDEX
		XOR 1,SPT(2)	;GET CURRENT ADR INTO PTR
		AND 1,[-1B13]
		XOR 1,SPT(2)
		JRST .+1]
	TLNE 1,17		;NOT IN CORE?
	JRST KIPCL5		;YES, DON'T SETUP
	MOVSI 2,-PLKV
	TDNN 2,CST1(1)		;PAGE LOCKED IN CORE?
	JRST KIPCL5		;NO
	LDB 2,[POINT 9,CST0(1),8] ;CHECK AGE
	CAIGE 2,100		;LEGAL?
	JRST KIPCL5		;OTHER PROCESSOR DOING IT
	MOVSI 2,(CORMB)		;MODIFIED BIT
	TLNE 1,WRITEB		;PAGE WRITABLE?
	IORM 2,CST0(1)		;YES, ASSUME IT WILL BE
	IORI 1,KIAXB		;CONSTRUCT KI MAP HALF-WORD
	TLNE 1,WRITEB		;WRITE LEGAL?
	IORI 1,KIWB		;YES
KIPCL2:	JUMPL 4,[HRRM 1,0(4)	;STORE ODD HALF-WORD
		JRST .+2]
	HRLM 1,0(4)		;STORE EVEN HALF-WORD
	JRST KIPCL5

;ANALYZE INDIRECT PTR

KIPCL8:	LDB 2,[POINT 13,1,26]	;SPT INDEX OF PT
	MOVE 2,SPT(2)		;ADDRESS OF PT
	TLNE 2,17		;PT IN CORE?
	JRST KIPCL5		;NO, DON'T SETUP
	IORI 2,KIAXB		;CONSTRUCT PTR TO PT
	HRL 2,KXUPT
	MOVSS 2
	HLRM 2,KIP340+<KIPG/2>(2)
	DATAO PAG,KIPGWD
	LDB 2,[POINT 9,1,35]	;PAGE INDEX FROM IND PTR
	MOVE 1,KIPGA(2)		;GET NEW PTR
	JRST KIPCL9		;GO ANALYZE THAT

;PAGE FAILURE TRAP
;REF RELEVANT MAP WORD, FOLLOW PTRS IF NECESSARY, SETUP KI MAP
;IF PAGE IS IN CORE, OTHERWISE SIMULATE TRAP

KIPTM:
KIPTU:	MOVE 2,KXUPT
	SKIPN 1,KIMPFW(2)	;ANYTHING IN MON PFW?
	MOVE 1,KIUPFW(2)	;NO, USE USER
	SETZM KIMPFW(2)		;KEEP MPFW 0 UNLESS JUST SET BY HWARE
	MOVEM	1,LASTPF	;SAVE FOR DEBUG
	AOS KIPFCT		;COUNT
	TRNE 1,1B31		;'HARD' FAILURE?
	JRST [ MOVEI 2,0(1)
		CAIN 2,22	;REALLY HARD FAILURE
		JRST KIPT3	;HARD FAILURE
		JRST .+1]
	LDB 2,[POINT 9,1,17]	;GET NUMBER OF VIRTUAL PAGE
	AOSE SWPKI
	JRST .-1		;LOCK OUT SWPIN
	TLNE 1,(1B8)		;USER SPACE?
	JRST [	MOVE 3,UPTA(2)	;YES, GET PTR
		ROT 2,-1	;SETUP CORRECT INDEX TO KI MAP
		ADD 2,KXUPT
		JRST KIPT1]
	CAIL 2,600		;PER-PROCESS MON SPACE?
	JRST [	MOVE 3,PSB(2)	;YES
		ROT 2,-1
		ADDI 2,KIEPT
		JRST KIPT1]
	CAIL 2,400		;MON MAP ABOVE 400?
	JRST [	MOVE 3,MMAP(2)
		ROT 2,-1
		ADDI 2,KIEPT
		JRST KIPT1]
	CAIL 2,340		;MON MAP BELOW 400?
	JRST [	MOVE 3,MMAP(2)	;YES, DIFFERENT PART OF KI MAP
		ROT 2,-1
		ADDI 2,KIP340
		ADD 2,KXUPT
		JRST KIPT1]
	BUG(HLT,<PAGE FAULT FOR UNMAPPED ADDRESS>)

KIPT3:	BUG(HLT,<HARD KI PAGE FAILURE>)

KIPT1:	DATAO PAG,KIPGWD	;CLEAR AR'S
	TRNE 1,1B31
	JRST KIILRD		;ILLEGAL PC MESSING
	TLNN 3,ACCESB		;CHECK ACCESS BITS - ANY?
	JRST KIILAC		;NO
	TLNE 3,TRAPUB		;TRAP-TO-USER?
	JRST KITUSR		;YES
	TLNN 3,READB+XCTB	;R, OR X?
	JRST [ TRNE 1,1B35	;TRYING TO READ
		JRST .+1	;NO, LOOK FOR WRITE ACCESS
		JRST KIILRD ]	;ILLEGAL READ ACCESS
	TLNN 3,COPYB		;COPY ON WRITE REQUESTED
	TLNN 3,WRITEB		;WRITE LEGAL?
	TRNN 1,1B35		;OR NO WRITE REQUESTED?
	JRST .+2		;YES
	JRST KIWRT		;NO, ILLEGAL
	TLNE 3,INDBIT		;INDIRECT PTR?
	JRST KIPT2		;YES, TRACE IT
	TLNE 3,SHRBIT		;SHARE PTR?
	JRST [	LDB 4,[POINT 13,3,26] ;YES, GET SPT INDEX
		XOR 3,SPT(4)	;PUT ADDRESS IN ORIG PTR
		AND 3,[-1B13]
		XOR 3,SPT(4)
		JRST .+1]
	TLNE 3,17		;PAGE IN CORE?
	JRST KINICT		;NO
	LDB 4,[POINT 9,CST0(3),8]
	CAIGE 4,100		;LEGAL AGA?
	JRST KIAGET		;NO
	SETOM SWPKI		;RELEASE SWPIN
	MOVE 4,KIAGER		;SIMULATE UPDATE OF CST
	DPB 4,[POINT 9,CST0(3),8]
	MOVE 4,KIPUR	
	TRNE 1,1B35		;THIS A WRITE REF?
	TLO 4,(CORMB)		;YES, SET MODIFIED BIT
	IORB 4,CST0(3)
	IORI 3,KIAXB		;CONSTRUCT KI MAP HALF-WORD
;;;	TRNE 1,1B35		;THIS A WRITE REF?
	TLNE 4,(CORMB)		;DIRTY BIT SET?
	TLNN 3,WRITEB		;AND ALSO WRITE BIT
	JRST .+2		;NO LUCK
	IORI 3,KIWB		;YES, ALLOW WRITE
	JUMPL 2,[HRRM 3,0(2)	;STORE HALF-WORD, PTR SETUP ABOVE
		JRST .+2]
	HRLM 3,0(2)
	MOVE 1,KXUPT
	MOVE 1,KIMUPC(1)	;GET RETURN ADR
KITR4:	MOVEM 1,KIP7P		;SETUP FOR CH7
	MOVSI 4,KITAC		;RESTORE AC'S
	BLT 4,4
	SETOM KITLCK
KITRET:	SKIPN KIP7F		;CH7 SERVICE NEEDED?
	JRSTF @KIP7P		;NO, EXIT DIRECTLY
	AOS KIP7Q		;YES, REQUEST EXIT VIA CH7
	ISB SCDCHN
	JRST .-1

;TRACE INDIRECT PTR

KIPT2:	LDB 4,[POINT 13,3,26]	;GET PAGE TABLE SPT INDEX
	MOVE 4,SPT(4)		;ADDRESS OF PAGE TABLE
	TLNE 4,17		;IN CORE?
	JRST KINICT		;NO, TRAP
	LDB 0,[POINT 9,CST0(4),8]
	CAIGE 0,100
	JRST KINICT		;PAGE TABLE NOT IN CORE
	IORI 4,KIAXB		;CONSTRUCT MAP HALF-WORD
	HRL 4,KXUPT
	MOVSS 4
	HLRM 4,KIP340+<KIPG/2>(4);ASSUMES KIPG IS ODD ADDRESS BELOW 400
	DATAO PAG,KIPGWD	;CLEAR AR'S
	LDB 4,[POINT 9,3,35]	;PAGE INDEX FROM IND PTR
	MOVE 3,KIPGA(4)		;GET NEW PTR
	JRST KIPT1		;PROCESS IT

;PAGER TRAP CONDITIONS

KIILAC:	MOVSI 4,(2B1+1B5)	;CONSTRUCT APPROPRIATE TRAP STATUS WD
	JRST KIXTRP

KIILRD:	MOVSI 4,(2B1+1B6)
	JRST KIXTRP

KITUSR:	MOVSI 4,(2B1+1B4)
	JRST KIXTRP

KIWRT:	MOVSI 4,(2B1+1B7)
	TLNE 3,COPYB		;COPY-ON-WRITE ON HERE?
	TLO 4,(1B3)		;YES, ADJUST TRAP STATUS WD
	JRST KIXTRP

KINICT:	MOVSI 4,(2B1+1B2)
	JRST KIXTRP

KIAGET:	MOVSI 4,(0B1)
	JRST KIXTRP

;SIMULATE INITIATION OF PAGER TRAP
; ASSUMES JSYS [XWD TRAPPC,PGRTRP+1] IS IN 70

KIXTRP:	SETOM SWPKI		;RELEASE SWPIN
	SETZ 3,			;CLEAR SLOT FROM KI MAP
	JUMPL 2,[HRRM 3,0(2)
		JRST .+2]
	HRLM 3,0(2)
	TLNN 1,(1B8)		;CONSTRUCT TRAP STATUS WD - USER REF?
	TLO 4,(1B17)		;NO, SET MON BIT
	TLO 4,(1B14)		;ALWAYS SET READ ACCESS
	TRNE 1,1B35		;WRITE?
	TLO 4,(1B15)		;YES
	LDB 2,[POINT 9,1,17]	;GET VIRT PAGE NUMBER
	DPB 2,[POINT 9,4,26]	;CONSTRUCT VA FOR TRAP STATUS WORD
	MOVEM 4,TRAPS0		;FIXED LOCATION, TRAP STATUS WORD
	MOVE 4,KXUPT
	MOVE 4,KIMUPC(4)
	MOVEM 4,TRAPPC
	JSP 1,.+1		;GET CURRENT FLAGS
	HRRI 1,PGRTRP+1		;SETUP EXIT ADDRESS TO REGULAR PGR TRAP
	JRST KITR4

;LAST PAGE

	LIT

KIEND:	END


